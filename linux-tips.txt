# В этом файле собраны советы и подсказки по использованию Xubuntu, и Линукса вообще.
# Используй приложенный мейкфайл для удобного просмотра.

# Текст ниже добавляется к выводу `make help`.
? Полезные теги:
?   -install         - установка
?   -initial-setup   - начальная настройка
?   -useful-packages - полезные пакеты
?   -repair          - разруливание проблем

[-install] [legacy] [uefi] [bios] [windows-dual-boot]
Выбираем между legacy и uefi
До установки выбери в биосе режим загрузки: legacy или uefi.
Может быть еще dual - то есть выбирать автоматически, предпочитая uefi.
На новых компах выбора может не быть - всегда uefi.
Варианты:
    * Другая ОС уже стоит и хочется дуал-бут:
        Нужно оставить то, что уже стоит.
        Но только если это не dual-режим - тогда выясни, что на самом деле используется:
            - Если ты на линуксе, то проверь существование папки `/sys/firmware/efi` - если она есть, то ты на uefi.
            - Иначе попробуй в биосе заменить dual на legacy или uefi, посмотри что из них запустится.
        Нельзя оставлять dual-режим потому, что в нем загрузочная флешка грузится в режиме uefi, и соответственно ставит убунту в этом же режиме.
        Если другая ОС стоит в режиме legacy, то будет плохо.
    * Дуал-бут не нужен:
        UEFI на новых машинах. На старинных лучше legacy.

[-install] [boot] [black-screen] [videocard] [drivers] [bug-workaround]
Фикс черного экрана при запуске с флешки/диска (анимация загрузки нормальная, а потом гаснет)
Выключи комп кнопкой и при следующей загрузке тыкай Shift.
Выбирай пункт меню `safe graphics`. Если его нет, то то же самое делаем руками:
В открывшемся окне найди экспертный режим, в нем команду запуска. Там после `quiet splash` добавь ` nomodeset`, и нажми Enter.
В уже установленной системе такой проблемы быть не должно, но разрешение может быть неправильным. Читай тут же про фикс разрешения для карточек nvidia.

[-install] [partitions]
Какие разделы создавать при установке, и как форматировать диск
Свежую инстукцию смотри в arch_linux.txt

[-install] [-repair] [boot] [grub]
При установке ошибка grub-а, а после ребута вылезает консоль `grub recovery/rescue`
Вероятно проблема в режиме загрузки, legacy vs uefi. Почитай выше про это.
Варианты действий для метода тыка:
    А. Переустановить без UEFI.
        Имеет смысл только если предыдущая попытка установки была с UEFI, то есть с флешки линукс загрузился в UEFI-режиме (папка `/sys/firmware/efi` существует).
        Если так, то в биосе убери поддержку UEFI (оставь только легаси-режим).
    B. Понять, что не так с настройкой UEFI.
        Тут нужно думать.
    С. Поставить GRUB из консоли. (Видимо этот способ ставит его без UEFI?)
        Вариант не очень, потому что-то еще могло не доустановиться, но вроде работает.
        Выключи комп кнопкой и снова запускайся с установочного диска.
        В терминале делай `sudo fdisk -l`, по размеру определи где стоит линукс. Пусть это будет `/dev/sda7`.
        Дальше делай вот что (sic, второй раз `sda` без цифры):
            sudo mount /dev/sda7 /mnt
            sudo grub-install --boot-directory=/mnt/boot /dev/sda
        После запуска нормальной системы на всякий случай обнови конфиг grub, тут где-то есть инструкция.

[-repair] [boot] [grub]
При включении вылезает консоль `grub` (НЕ `recovery/rescue`)
    set pager=1
    ls
Он даст список разделов. Теперь найди нужный раздел, смотря на:
    ls (hd0,1)/
Для федоры с btrfs:
    Ищем раздел boot. Там будут `vmlinuz-*`, `efi`, `grub2`.
    Допустим, наш - `(hd0,1)`.
        set root=(hd0,1)
        linux (hd0,1)/vmlinuz<тут ТАБ> root=/dev/sda1 ro rootflags=subvol=root
                                            ^~~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~
                                            |            приблуда для brtfs, имя подраздела - тут "root"
                                            |
                                            `- тут раздел с /; хз как определить из grub-а, удобнее с live-usb
        initrd (hd0,1)/init<тут ТАБ>
        boot
Для старой убунты без UEFI:
    Ищем просто корневой раздел.
        set root=(hd0,1)
        linux /boot/vmlinuz root=/dev/sda1
        initrd /boot/initrd.img
        boot
Когда линукс запустится, надо закрепить успех.
На федоре:
    # Удаляем конфиги. Это важно, потому что существующие битые конфиги иначе не обновляются.
    sudo rm /boot/efi/EFI/fedora/grub.cfg
    sudo rm /boot/grub2/grub.cfg
    # Переустанавливаем GRUB.
    sudo dnf reinstall shim-* grub2-efi-* grub2-common
На старой убунте без UEFI:
    sudo apt upgrade
    sudo apt update
    sudo updage-grub
    Если при `update-grub` он спросит, обновить ли конфиг, нажми "оставить текущий конфиг" (дефолт).
    Потом он спросит, куда его поставить: /dev/sda или /dev/sdaX. Выбери первое. Это эквивалентно автоматическому определению X, по идее.

[-install] [-repair] [boot] [grub]
Переустанавливаем Linux без Live-USB, загружаясь целиком в оперативную память ("toram")
Источник: https://askubuntu.com/questions/1318013/how-to-install-ubuntu-from-iso-file
В `/boot/grub/grub.cfg` должен быть пункт меню вида:
    menuentry "isoname ISO" {
        set root=(hdX,Y)
        set isofile="/[path]/[name].iso"
            loopback loop $isofile
            linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isofile toram --
            initrd (loop)/casper/initrd
    }
ВНИМАНИЕ: Если у тебя GRUB 2.04 (проверь в `grub-install --version`), И если у тебя включен UEFI, то нужно второй строчкой (перед первым set) добавить:
    rmmod tpm
Обрати внимание на параметр `toram`, он важен.
Запускаем компьютер с этого пункта меню, и размонтируем все дисковые разделы.
Чтобы размонтировать live-iso, делаем так:
    sudo umount -lrf /isodevice
Теперь мы должны работать полностью из оперативки.
После установки и ребута, стоит обновить конфиг grub, тут есть инструкция.

[-repair] [fstab] [gparted]
Узнаем GUID-ы разделов для fstab
Гуиды иногда меняются при редактировании (сдвигании?) разделов в gparted. Но не всегда.
Посмотреть гуиды можно так:
    lsblk -p -o NAME,SIZE,PARTLABEL,UUID

[-repair] [fedora] [chroot]
Залезаем в chroot с live usb
Посмотри какие есть разделы:
    sudo fdisk -l
Монтируй /
    mount /dev/sda3 /mnt -o subvol=root
          ^~~~~~~~~                ^~~~ имя подраздела в btrfs
          Угаданный раздел с /
Монтируй /boot
    mount /dev/sda2 /mnt/boot
          ^~~~~~~~~
          Угаданный раздел с /boot
Монтируй фигню всякую:
    mount -o bind /dev /mnt/dev
    mount -o bind /proc /mnt/proc
    mount -o bind /sys /mnt/sys
    mount -o bind /run /mnt/run
Монтируй EFI:
    mount -o bind /sys/firmware/efi/efivars /mnt/sys/firmware/efi/efivars
    mount /dev/sda1 /mnt/boot/efi
          ^~~~~~~~~
          Угаданный раздел с EFI
Наконец:
    chroot /mnt

[-repair] [boot] [grub]
Чиним удаленный раздел boot в Fedora
(Но вообще лучше бы ему не быть отдельным разделом...)
Создай этот раздел в gparted. Размер = 1024мб, фс=ext4
Залезь с live usb в chroot (выше инструкция)
Посмотри какие пакеты ставятся в `/boot`:
    dnf repoquery --installed --file /boot\*
Их же переустанови: (имена пакетов можно копировать, прямо с версиями)
    sudo dnf reinstall пакеты...

[-initial-setup] [reboot] [hang] [reisub] [reib] [oom-killer]
Ядерные хоткеи REIB, и как их включить
Включаем так: (на убунте)
    sudo nano /etc/sysctl.d/10-magic-sysrq.conf
    kernel.sysrq = 196
Все операции начинаются так:
    Зажать Alt
    Если ты в гуи, зажать Ctrl
    Нажать PrintScreen
    Можно отпустить все кроме Alt.
Дальше, на выбор:
    * Ребут (нажимай клавишы медленно): R E I B
    * Убить процесс, который ест больше всего памяти: F
REIB vs REISUB
    SU - это для аккуратного размонтирования файловых систем. Якобы для современных журналируемых систем не нужно.

[-initial-setup] [beep] [speaker]
Глушим поганую пищалку
Некоторые дистрибутивы (Fedora и Manjaro) любят громко пищать динамиками, имитируя старые пищалки.
Делаем так:
    sudo nano /etc/modprobe.d/nobeep.conf
Туда пишем:
    blacklist pcspkr
    blacklist snd_pcsp
Заодно делаем так, чтобы не ребутать:
    sudo rmmod pcspkr snd_pcsp
    # Возможно только один из двух модулей сейчас загружен. Это не проблема, тогда убьется только второй.

[-initial-setup] [oom] [oom-killer]
Настраиваем автоматическое закрытие приложений когда кончается память
В теории ядро автоматически убивает приложения когда нет памяти (oom-killer), но оно очень не торопится это делать,
  поэтому в systemd есть сервис, который делает это сам и быстрее (systemd-oomd). Но его нужно настроить.
Он включен по дефолту в fedora. В других дистрибутивах нужно руками заполнить конфиги. Можно вдохновиться вот этим:
    https://packages.fedoraproject.org/pkgs/systemd/systemd-oomd-defaults/fedora-rawhide.html#files
    https://src.fedoraproject.org/rpms/systemd/tree/rawhide (а вот это что такое, непонятно: https://pagure.io/systemd/tree/rawhide - тут какие-то другие файлы, но это не так важно)
    А вот оно в AUR: https://aur.archlinux.org/packages/systemd-oomd-defaults - скачивает конфиги из федоры
.
Включаем вот так:
    sudo mkdir -p /usr/local/lib/systemd/oomd.conf.d/
    sudo nano /usr/local/lib/systemd/oomd.conf.d/10-oomd-defaults.conf
Туда пишем:
    [OOM]
    DefaultMemoryPressureDurationSec=20s
Дальше:
    sudo mkdir -p /usr/local/lib/systemd/system/system.slice.d/
    sudo nano /usr/local/lib/systemd/system/system.slice.d/10-oomd-per-slice-defaults.conf
Туда пишем:
    [Slice]
    ManagedOOMMemoryPressure=kill
    ManagedOOMMemoryPressureLimit=80%
Дальше:
    sudo mkdir -p /usr/local/lib/systemd/user/slice.d/
    sudo nano /usr/local/lib/systemd/user/slice.d/10-oomd-per-slice-defaults.conf
Туда пишем: (да, здесь тот же конфиг)
    [Slice]
    ManagedOOMMemoryPressure=kill
    ManagedOOMMemoryPressureLimit=80%
.
Настраивать руками тут особо ничего не надо. "Memory pressure" - это не процент оперативки,
  а "fraction of time in a 10 second window in which all tasks in the control group were delayed" - что бы это не значило.
.
Ребут.

[-initial-setup] [-useful-packages] [firefox] [snap] [ubuntu]
Ставим Firefox без snap
Это только для убунты, очевидно. У всех остальных он и так нормальный.
Делай так:
    sudo add-apt-repository ppa:mozillateam/ppa
    sudo nano /etc/apt/preferences.d/mozillateam.pref
Туда пишешь:
    Package: firefox*
    Pin: release o=LP-PPA-mozillateam
    Pin-Priority: 1001
Дальше:
    sudo apt update
    sudo snap remove firefox
    sudo apt install firefox firefox-locale-ru
В логах проверяешь, что пакеты качаются с mozillateam/ppa.
Проверяешь `which firefox` -> `/usr/bin/firefox`, без упоминания snap.
Вот тут есть альтернативный способ, попробуй его, если что-то снова отлетит:
    https://www.omgubuntu.co.uk/2022/04/how-to-install-firefox-deb-apt-ubuntu-22-04

[-initial-setup] [snap]
Сносим систему snap-пакетов
На manjaro: (тут она особо не мешает, но все равно нафиг ее)
    sudo pamac remove snapd libpamac-snap-plugin
На убунте:
    Ее не жалко, особенно на Xubuntu. Про ванильную убунту не уверен.
    Можно куда-то сохранить список установленных snap-пакетов: сохранить вывод `snap list`.
    Потом снести пакет `snapd`.
    Например на убунте так:
        sudo apt autoremove --purge snapd gnome-software-plugin-snap
        rm -rf ~/snap
    Не уверен, что нужно:
        sudo rm -rf /var/cache/snapd/
    На всякий случай запрещаем установку snap обратно:
        sudo apt-mark hold snapd
    Или есть другой способ, но он наверное не нужен, если сделал строку выше?
            sudo nano /etc/apt/preferences.d/nosnap.pref
        Туда пишем:
            Package: snapd
            Pin: release n=jammy*
            Pin-Priority: -10
        Где вместо `jammy` вывод команды `lsb_release -cs`.
        Это мутно. Альтернативная строчка `Pin`, если эта не помогает:
            Pin: release a=*

[-initial-setup] [ads] [ubuntu]
Отключаем рекламу в apt на убунте
1. sudo pro config set apt_news=false
2. sudo nano /var/lib/ubuntu-advantage/apt-esm/etc/apt/sources.list.d/ubuntu-esm-apps.list
    Там комментируем все строчки.
Еще вариант:
    sudo ln -s -f /dev/null /etc/apt/apt.conf.d/20apt-esm-hook.conf
Если не работает, старый ручной вариант:
    sudo rm /var/lib/ubuntu-advantage/messages/*.tmpl
    sudo rm /etc/update-motd.d/88-esm-announce
    sudo systemctl disable ubuntu-advantage
Больше вариантов здесь:
    https://askubuntu.com/q/1434512

[-initial-setup] [bash] [prompt]
Настраиваем prompt в bash
Раззипуй этот шелскрипт (`base64 -d 1.txt | gzip -d >_hbc_bash_prompt.sh`, был сжат `gzip -c9 _hbc_bash_prompt.sh | base64 >1.txt`):
    H4sICM1E2GUCA19oYmNfYmFzaF9wcm9tcHQuc2gAdVRtT+NGEP7uXzElkQICTKC9qhWKWshxhQ9A
    xEulKo6cjT22t2x2Le86ITrdf+/M2nHvgFiKlN2ZnWeeZ156cG3U5lKJ5GUs3MBCUltnlrAQtoCy
    MsvSHcHqNAh6cKOtE0rBWroC5rZODSQlxMUiidk7brxDeneCLjmhYyYVhunJPOTn4wKTF5AZrHFQ
    IUgNl/QqJMtTIQm3MVs9cOSh1LFD6zA9AumzMqXEFDKCgC+YmkrQ5fwNjs8ioSQUOmk0ZULIBDiF
    vdf+18uLx+v476uHx5v7u+Nve/DTCF5hFrgCdZOe0DkCHVva4AwISOvlcgPa6OMUM1ErByuhamSj
    lbkWCgw9qcAmlSyd5Xtt+G2dFJR6GEweT0ee/7UxLz58VuuE84McNVbCSZ1/B9sJIsoSdeojslVU
    ldiEcM9oa2nxHfuVQ2YMZkUOlST5CB+EciZHfnREgRe1g1yuUIPQTUTWF/6lmnd4klhYV2cZI3sG
    D/e3k6d4fH97e3H3+XC0H/uaN+my3kuh0wOmeAFFQ1I4yGRFGWSmAhQkResG+IpJzeyPQDhHFqpq
    bVmCuatEOYcFKrMOgx8wUlzUecz2/QP4GgB9cXx9OY7b1O6eHi4mo/7+/vvbw9ODg+BbEHyUcxes
    B3+h8yorQUrgK2mSmBRDuMm14WZ13LiaaovrLRVLbUqmhhCmoY+kTEItcTUe7fX/2Ava4P+YGpYy
    Lxw9J7rcV6mXnBG5X0UlLfWDp+4l25i6glRaV8mFVytsQz1rRkdN+hpF3iQcCUm6lqS2hSvtqBd5
    QA1VGvnE0opOfv4prpFo0H0zb4NPar6k1mtaXGQcbH6ssKuK98OkMNB/L3VDl+dt+pEZKBCcwWzm
    3fzYQfuRXkN/yORWs8e2IJTCUvKYOelUmymP1CCaRjgbnkdruphG9Z9RMYtENBtsA0yIuXtbz+8z
    vBrzChh+mBAhHDYQ0+H576fLaNbrNSf6G+mBd0Rl8e2L1vQ/j2dLk0djYWmNpjQSiTPVpqOxBfn5
    t/NP52e/fOLoTAW20Gd8s450B97xeyp4h6YyERRxuyQUZg5Mtm0sLvmPnJ9vPsNoF2tags3yT4yi
    mNyIHKgyxoU7pPmV8+t32cFuZfow+KDEddm1Jq+OBoYHHQY7NsAA/P9dS2DIw04Y/wH/ptts2AYA
    AA==
Допиши в `nano ~/.bashrc` в конец `source path/to/_hbc_bash_prompt.sh`.
Может требоваться ручная подстройка в зависимости от дистрибутива. Проверь, что после зафейлившихся команд рисуется красный символ, но только один раз.
Если это криво работает, читай комменты в скрипте.

[fonts]
Куда ставить шрифты
Для себя: ~/.local/share/fonts/
Для всех: /usr/local/share/fonts
Может потребоваться сброс кэша шрифтов: `fc-cache`, или `fc-cache -f`.

[fonts] [fonts-antialiasing]
Отключение антиалиасинга на конкретном шрифте
В ~/.fonts.conf впиши это: (если файла нет - создай; если есть - добавь содержимое внутрь тега <fontconfig>)
    <!--
    ~/.fonts.conf
    Remember to run "fc-cache" after you modify this file.
    -->
    <fontconfig>
      <match target="font">
        <test name="family" qual="any">
          <string>Красивое имя шрифта</string>
        </test>
        <edit name="antialias" mode="assign" binding="strong">
          <bool>false</bool>
        </edit>
      </match>
    </fontconfig>

[fonts] [fonts-antialiasing]
Отключение антиалиасинга везде, с мясом
    cd /etc/fonts/conf.d
    sudo rm 10-antialias.conf
    sudo rm 10-hinting-slight.conf
    sudo ln -s ../conf.avail/10-hinting-full.conf
    fc-cache -fv  #Лучше вместо этого ребут?
Как вернуть обратно - думаю, понятно.
Странновато работает. Для надежности лучше еще руками отключить антиалиасинг в гуи настроек.

[fonts] [fonts-antialiasing] [ubuntu]
Отключение запрета на использование пиксельных шрифтов
На арче этого нет. Видимо убунто-специфичное?
Видимо запрет стоит, чтобы не возникали неожиданные проблемы со скейлингом. Может и не стоит отключать.
    cd /etc/fonts/conf.d
    sudo rm 70-no-bitmaps.conf
Откатить можно командой: sudo ln -s ../conf.avail/70-no-bitmaps.conf

[-initial-setup] [fonts]
Шрифты с Windows
Скачай офф. вируалку винды (якобы для тестов браузера Edge), образ для виртуалбокс.
Распотроши архиватором пока не дойдешь до файла с расширением `.vmdk`.
(Если застрянешь на .ova, делай `tar -xf ...ova`.)
    убунта: sudo apt install libguestfs-tools
федора: sudo dnf install libguestfs-tools
manjaro: pamac install guestfs-tools
    # На федоре после установки надо перезайти в систему.
    mkdir ./mount
    guestmount -a WinDev*Eval-disk001.vmdk -i --ro ./mount
    cp -r ./mount/Windows/Fonts/ -T ./WindowsFonts
    umount ./mount
    rm -r ./mount
Копируем в систему: (тут owner исправляется автоматически)
    sudo cp -r WindowsFonts -T /usr/local/share/fonts/WindowsFonts
Или, копируем только себе:
    cp -r WindowsFonts -T ~/.local/share/fonts/WindowsFonts
Есть еще всякие пакеты:
    Например на убунте:
        sudo apt install ttf-mscorefonts-installer
    Или поновее шрифты на sourceforge в проекте `mscorefonts2` (там два экзешника от мелкомягких, скачай их и выпотроши шрифты архиватором).

[clock] [windows-dual-boot]
Фикс кривых часов при дуал-буте с виндой
На manjaro, в settings->manjaro settings manager можно выбрать, считать ли часы биоса в локальном времени или в UTC.
Есть вариант из консоли, но на счет него не уверен:
    sudo timedatectl set-local-rtc 1
Без sudo вроде тоже работает, но с ним спокойнее.

[+outdated] [black-screen] [lock-screen] [videocard] [drivers] [bug-workaround]
Фикс черного лок-скрина в Xubuntu (пофикшено в Xubuntu 19.10)
Либо вводить вслепую
Либо нажимать F1/2/../6, затем F7 (но это вызывает задержку)
Либо (дает очень ретро экран блокировки и не дает монитору отключиться)
    sudo apt remove light-locker
    sudo apt install xscreensaver
Либо (но это вызывает мерцание экрана блокировки и не дает монитору отключаться)
    sudo apt remove light-locker
    sudo apt install xfce4-screensaver

[+outdated] [crash] [bug-workaround]
Фикс краша "Редактора меню" в Xubuntu, когда в системе используется русский язык (пофикшено в Xubuntu 19.10)
sudo nano /usr/lib/python3/dist-packages/menulibre/util.py
Найти строку
    return GLib.markup_escape_text(text, len(text))
Заменить на
    return GLib.markup_escape_text(text)

[-initial-setup] [fonts]
Какие шрифты выбрать
Тут названия (sans и monospace) которые использует арч. Предполагаю, что они мапятся в "Noto ..." (проверь в `fc-match "Sans Regular"`),
хотя когда я попробовал те же шрифты на других дистрибутивах, вроде была небольшая разница.
                           комп   ноут
Основной:  Sans Regular       9 или 10 (noto sans?)      ,    или Trebuchet MS 9, или Verdana 8
Моно:      Monospace Regular  9 или 10 (noto mono?)      ,    или Consolas 10 или Andale Mono 10
Заголовки: Sans Bold          9 или 10 (noto sans bold?) ,    или Verdana Bold 9, или Trebuchet MS Bold 9
Терминал:  Monospace Regular 10 или 11 (noto mono?)
Везде хинтинг: light на ноуте, а на компе medium?

[-useful-packages] [laptop] [overheating] [battery]
Настройка скорости процессора (в основном для ноутбуков?).
(на manjaro не ставь, там конфликт какой-то)
    sudo apt install cpufrequtils
Теперь можно посмотреть информацию в `cpufreq-info`.
Частота процессора определяется governor-ом.
Меняется он так: (вместо 3 - число ядер минус 1)
    for i in {0..3}; do sudo cpufreq-set -c $i -g schedutil; done
Вместо `schedutil` - имя governor-а. Их список смотри в `cpufreq-info`, и там же проверяй результат.
Чтобы узнать список режимов, делай `cpufreq-info` и ищи там governors.
Нормальные:
* schedutil, ondemand (оба общего назначения, не уверен какой лучше, вроде первый)
* performance
* powersave

[-initial-setup] [-useful-packages] [laptop] [overheating] [battery]
Чтобы ноут не грелся и ел меньше батареи
На manjaro TLP стоит из коробки.
Вариант 1:
    sudo apt install tlp
    sudo tlp start
    sudo systemctl enable tlp.service
Вариант 2:
    sudo apt install laptop-mode-tools
    Ребут

[-initial-setup] [-useful-packages] [laptop] [battery]
Бережем время жизни батареи
Это достигается запретом на полную зарядку.
    На manjaro возможно оно как-то само включается? Проверить.
    Поставить tlp, как написано выше.
    sudo tlp-stat -b
    Он напишет что-то про допустимые диапазоны значений. У меня предлагал `STOP_CHARGE_THRESH_BAT0` переключать между 0 и 1.
    Идем в `sudo nano /etc/tlp.conf` и там раскомментируем нужную строку, с нужным значением (у меня 1). Они в начале последнего экрана.
    Ребут, потом проверяем результат в `sudo tlp-stat -b`.

[-initial-setup] [screen] [144hz] [videocard] [drivers]
Настраиваем 144-герцовый монитор
В настройках дисплея ставим 144 герца, тут все легко.
Настройка имеет свойство слетать, когда моник отключается из-за неактивности. Чтобы это исправить:
    Создай "профиль" дисплея с 144 герцами.
    "Настраивать дисплеи при подключении" -> да
    "Автоматически включать профили" -> да

[-initial-setup] [videocard] [drivers] [amd] [white-screen]
Ставим драйвер от AMD
Сначала проверь, что он не встал по дефолту! Инсталлер запросто мог сам его поставить.
`glxinfo` будет показывать "mesa", но это ничего не значит.
Сделай `lspci -v | sed '1,/VGA/d;/^$/,$d'`, и если увидишь строку `Kernel driver in use: amdgpu`, то драйвер стоит.
Чтобу установить, качай с сайта amd и запускай `amdgpu-install`.
Есть еще `amdgpu-pro-install`, который как обычный, но дополнен closed-source компонентами, но:
    * Он у меня не встал (белый экран после логина).
    * Не факт, что он лучше.
Сносится командой `amdgpu[-pro]-uninstall`. Никаких утилит настроек нет, кажется.

[-initial-setup] [videocard] [drivers] [nvidia] [white-screen]
Ставим драйвер от NVidia
В гуи настроек есть старые драйвера, а в apt - поновее, но не факт что они лучше.
Из apt ставить так: `sudo apt install nvidia-driver-XXX` (XXX = версия). Потом можно попробовать `sudo nvidia-xconfig`, но наверное лучше без него.
Дрова могут нормально не ставиться на uefi. Надо было ставить убунту в legacy-режиме (уже установленную можно переделать под legacy, но это не идеально).

[videocard] [drivers] [nvidia] [black-screen] [boot]
Отключаем нерабочие дрова NVidia
Ctrl+Alt+F1/2/3/4/5/6/7 - переходим в другой терминал.
sudo apt purge nvidia-driver-XXX --autoremove
Ребут.

[videocard] [drivers] [nvidia]
Дрова Nvidia с офсайта (они так себе, лучше из пакетного менеджера)
Там в принципе все объяснено.
НЕ логинимся в систему.
Выходим в другую виртуальную консоль (Ctrl+Alt+F6).
Инсталлер сначала обрабатываем chmod +x, потом запускаем под sudo.
Он может попробовать отключить noveau-драйвер (спросит разрешение), соглашаемся,
    но запоминаем, как вернуть на место (стереть /usr/lib/modprobe.d/nvidia-installer..., /etc/modprobe.d/nvidia-installer...).
Удалять так:
    Тот же экзешник запускаем с `--uninstall`, опять под sudo.
    Стираем файлы в modprobe из пред. пункта.

[-initial-setup] [videocard] [drivers] [nvidia] [tearing]
Фикс разрешения и тиринга (tearing) на nvidia
Тиринг = tearing = диагональный разрыв при скроллинге.
Видимо это чинит разрешение на новых мониках. Для старых (VGA?) смотри ниже.
Добавить в параметры ядра (тут где-то есть инструкция как)
    nvidia-drm.modeset=1
Потом ребут.
Рабочий стол может странно выглядеть:
    Нужно залезть в настроки и что-то сделать со "вторым монитором" (это видео-разъем на ноуте, даже если он не подключен).
    Лучше всего подвинуть этот монитор так, чтобы он был рядом с основным, а не поверх (это снимет галочку "зеркальные экраны").
Если ты посмотрел в этот пункт, то у тебя еще может глючить lightdm gtk greeter (программа, которая спрашивает пароль при загрузке, но не локскрин).
    Проверь так: Перезагрузись. На экране ввода пароля открой выпадающий список пользователей. Потом закрой его кликом по пустому месту. Если картинка испортилась, проблема есть. Тогда сделай то, что написано ниже:
    sudo nano /etc/lightdm/lightdm.conf.d/10-set-monitors.conf
    Это создаст файл. Имя может быть любое, но нужно чтобы оно начиналось с маленького двузначного числа и кончалось на `.conf`.
    Впиши туда примерно вот это:
        [Seat:*]
        display-setup-script = xrandr --output VGA-0 --off --output LVDS-1-1 --auto --primary
    Тут ты для каждого своего моника (посмотри их имена в `xrandr`) задаешь настройки.
    Они начинаются с `--output <имя>`, а потом либо `--off`, чтобы выключить, либо `--auto` чтобы автоматически определить параметры. Плюс на одном монике лучше поставить `--primary`, чтобы сделать его основным.
    Проверь эту команду (начиная с `xrandr`), запустив ее в терминале.
    После сохранения конфига, проверь что он применился командой `lightdm --show-config` (там в списке должна быть твоя настройка).

[videocard] [drivers] [nvidia] [resolution]
Фикс разрешения на NVidia (на старых мониках (VGA?), про новые см. выше)
Сначала поставь и включи дрова от nvidia
Дальше: https://askubuntu.com/questions/100900/ (копию см ниже)
-
    Follow these steps.
-
    Note that **steps 6 and 7 are not usually necessary;** try skipping them and if that does not work, repeat all steps and include these two. Some monitors don't send EDID information to the computer, so Ubuntu can't know what the monitor is capable of and only offers safe (low) resolutions. Those two steps resolve that problem.
-
Можно пропустить 1-3, если нет черного экрана или чего-то такого:
    1. Reboot and restart in `Recovery Mode`.
    2. Type `rm /etc/X11/xorg.xonf` (<kbd>Enter</kbd>)
    3. Type `reboot` (<kbd>Enter</kbd>)
Продолжай отсюда:
    4. Once you're at the normal Ubuntu desktop again, press <kbd>Alt</kbd> + <kbd>F2</kbd> and type `terminal` (<kbd>Enter</kbd>)
    5. In the terminal, type `sudo nvidia-xconfig` (<kbd>Enter</kbd>). This will write a new `xorg.conf` file.
В шаге 5 могут вылезать разные варнинги. Не парься, скорее всего конфиг он и так записал.
    6. Press <kbd>Alt</kbd> + <kbd>F2</kbd> and type `gksu gedit /etc/X11/xorg.conf` (<kbd>Enter</kbd>).
Или, скажем, `sudo mousepad /etc/X11/xorg.conf`.
    7. Look for the part beginning with `Section "Monitor"`and there enter the correct `HorizSync` and `VertRefresh` values. (See https://askubuntu.com/questions/100898/how-do-i-look-up-the-hsync-vsync-values-for-my-monitor )
Статы нашего старого моника: (прямо так и копируй, но добавь 4 пробела в начале строки)
HorizSync	30.0 - 83.0
VertRefresh	56.0 - 75.0
    8. Restart.
    9. Once you're at the normal Ubuntu desktop again, find _"Nvidia X Server Settings"_ in the _"start menu"_ and start that.
    10. In the section `X Server Display Configuration`, set the desired resolution and press the button `Save to X Configuration File`.
Он может ворчать, что не может сохранить файл. Тогда руками из превьюшки скопипасть.
    11. Reboot.
-
    You should now have the proper resolution!
-
    Finally, copy the file `/etc/X11/xorg.conf` to a safe place in case you mess it up later and need to restore it.
Дальше по идее можно убрать `nomodeset` и заменить его на более пацанский `nvidia-drm.modeset=1` (а возможно на ничего).

[-initial-setup] [-repair]
Изменение и восстановление папок пользователя.
Чтобы изменить папки, меняй этот файл: ~/.config/user-dirs.dirs
Также есть глобальные (дефолтные?) настройки: /etc/xdg/user-dirs.defaults
После изменений настроек наверное стоит удалить старые закладки и сделать `xdg-user-dirs-gtk-update`, а потом перезайти
Eсли потерял папки, делай так:
    xdg-user-dirs-update --force
    xdg-user-dirs-gtk-update --force
    Первая команда создает папки, вторая добавляет их в закладки проводника.
    Если вторая команда барахлит, удали `.config/gtk-3.0/bookmarks` и попробуй заново.
Для интереса, кастомные закладки можно добавлять перетаскиванием папки на панель проводника. Или из консоли, вот так:
    echo "file://"`python3 -c 'import urllib.parse;print(urllib.parse.quote(input()))' <<< $(realpath ПАПКА)` >>.config/gtk-3.0/bookmarks
Неплохая идея: переименовать папки, чтобы они начинались с точки. Тогда их будет сложнее случайно удалить.
    Перемести папки:
        mv 'Рабочий стол' .desktop
        mv 'Загрузки' .downloads
        mv 'Шаблоны' .templates
        mv 'Общедоступные' .shared
        mv 'Документы' .documents
        mv 'Музыка' .music
        mv 'Изображения' .images
        mv 'Видео' .videos
    Или, если они названы по-английски:
        mv 'Desktop' .desktop
        mv 'Downloads' .downloads
        mv 'Templates' .templates
        mv 'Public' .shared
        mv 'Documents' .documents
        mv 'Music' .music
        mv 'Pictures' .images
        mv 'Videos' .videos
    Или создать с нуля:
        mkdir -p ~/.desktop
        mkdir -p ~/.downloads
        mkdir -p ~/.templates
        mkdir -p ~/.shared
        mkdir -p ~/.documents
        mkdir -p ~/.music
        mkdir -p ~/.images
        mkdir -p ~/.videos
    Обнови названия папок в настройках: nano ~/.config/user-dirs.dirs
        XDG_DESKTOP_DIR="$HOME/.desktop"
        XDG_DOWNLOAD_DIR="$HOME/.downloads"
        XDG_TEMPLATES_DIR="$HOME/.templates"
        XDG_PUBLICSHARE_DIR="$HOME/.shared"
        XDG_DOCUMENTS_DIR="$HOME/.documents"
        XDG_MUSIC_DIR="$HOME/.music"
        XDG_PICTURES_DIR="$HOME/.images"
        XDG_VIDEOS_DIR="$HOME/.videos"
    Обнови закладки проводника: nano ~/.config/gtk-3.0/bookmarks
        file:///home/holyblackcat/.documents Документы
        file:///home/holyblackcat/.images Изображения
        file:///home/holyblackcat/.music Музыка
        file:///home/holyblackcat/.videos Видео
        file:///home/holyblackcat/.downloads Загрузки
    Теперь перелогинься, и удали пустые папки со старыми именами, если они создались.
    Можно заметить, что в проводнике закладка рабочего стола называется `.desktop`. Неприятно, но легко не чинится:
        Если попробовать добавить кастомную закладку для него, то она будет скрываться с панели только одновременно со встроенной.
Как убрать пункт "недавные":
    ПКМ по заголовку "места" над списком закладок.

[-initial-setup] [gui-themes] [visual-customization]
Темы офомления (для xfce)
Самая нормальная - Matcha
    арч:
        pacman -S gtk-engine-murrine gtk-engines
    git clone https://github.com/vinceliuice/Matcha-gtk-theme
    cd Matcha-gtk-theme
    sudo ./install.sh
Следом за ней - Qogir
    git clone https://github.com/vinceliuice/Qogir-theme
    cd Qogir-theme
    # После этого коммита у них отлетели иконки кнопок в заголовке окна, которые чинятся только установкой отдельной темы иконок: https://github.com/vinceliuice/Qogir-icon-theme
    git checkout c7178471d3eb8b1d0f4ef8515c42bf4d687e020c
    sudo ./install.sh
    Ниже устаревшая информация:
        Чтобы избавиться от переопределения значков, делай так:
            sudo find /usr/share/themes/Qogir* -name 'gtk.css' -or -name 'gtk-dark.css' -exec sed -i 's|-gtk-icon-style: symbolic;|/*-gtk-icon-style: symbolic;*/|g' {} \;
Великолепная! Но минус - если у xfce-панели поставить кастомный цвет фона, будет визуальный бажок.
    adapta-gtk-theme
Хорошая, но онли рамки окон:
    shiki-colors-xfwm-theme
Терпимо:
    murrine-themes
Кастомные (от хороших к плохим), если нет специального скрипта установки, кидай темы в `~/.themes`.
    https://github.com/vinceliuice/Canta-theme
    У этой рамки окон хорошие, можно поставить только ради них:
        https://www.opendesktop.org/s/Gnome/p/1239855/ (ее постоянно меняли, качай файл за 2020-02-28. Дальше кнопки на панели задач стали вертикально не во всю ширину, поверь мне, я бисектил.)
    https://sourceforge.net/projects/classiclooks/
    https://github.com/B00merang-Project (набор)

[visual-customization] [compton]
Модный блюр под полупрозрачными окнами, на compton (не рекомендую)
    sudo apt install compton
Отключи в настройках оконного менеждера "Эффекты", а то он не будет работать.
Попробуй запустить compton, поиграй с флагами. Когда все устроит, добавь его в автозапуск с флагом `-b`.
Годные настройки:
    compton -bCfG -I 0.1 -O 0.1 -e 0.925 -r 5 -o 1 -l -7 -t -7 --blur-background-frame --blur-background-exclude '_GTK_FRAME_EXTENTS@:c' --blur-kern '7,7,0.5,0,0,0,0,0,0,0,0.75,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0.75,0,0,0,0,0,0,0,0.5'
Тут сделан хитрый кастомный блюр. Заметь, бубном он выключен для определенного типа окон (которые сделаны через gtk3, вроде - на вид они без заголовков, а-ля файрфокс с выключенным заголовком).
Иначе вокруг них в большом радиусе экран размыливало. Сейчас все еще размыливает немного вокруг попапов, но это даже красиво.
Менее выпендрежные настройки, без блюра.
    compton -bCfG -I 0.1 -O 0.1 -e 0.95 -r 5 -o 1 -l -7 -t -7

[visual-customization] [compiz]
Свистелки для оформления окон, на compiz (не рекомендую)
Во-первых: sudo apt install fusion-icon
Эта штука позволит легко экспериментировать с декорациями, и в случае чего вернуть дефолтные.
-
Дальше: sudo apt install compiz compiz-plugins-main compiz-plugins-extra compizconfig-settings-manager emerald emerald-themes
-
Открой настройки `CompizConfig settings manager`.
Включи жизненно необходимые плагины:
    Композитный режим, OpenGL, Совместимость с Gnome,
    Оформление окна (рамки окон),
    Изменение размеров окна, Переместить окно,
    Размещение окон (автоматический выбор координат окна, вместо дефолтных 0,0)
В настройках "Оформление окна" Compiz-а, замени команду на "emerald --replace".
Теперь ты готов к эксперементам.
Запусти `fusion-icon`. Теперь в трее ты можешь переключаться между оконными менеджерами: xfwm4 (дефолтный) и compiz (новый).
Учти, если меняешь настройки compiz, может потребоваться перезапустить fusion-icon.
Если все нравится, то добавить `compiz --replace` в автозагрузку.
Способ для Xubuntu:
    sudo mousepad /etc/xdg/xdg-xubuntu/xfce4/xfconf/xfce-perchannel-xml/xfce4-session.xml
    В открывшемся файле найти: xfwm4
    И заменить на: compiz"
    То же самое повторить для
    sudo mousepad /etc/xdg/xfce4/xfconf/xfce-perchannel-xml/xfce4-session.xml

[-useful-packages] [automation]
Управляем окнами из командной строки
sudo apt install xdotool
Есть еще `wmctrl`, но он кажется похуже.

[-initial-setup] [autorun] [messengers]
Автозапуск мессенджеров
Телеграм умеет стартовать в трее: `путь/до/Telegram -startintray`
    (если телеграм из пакета - то `telegram-desktop -startintray` - но на федоре пакет кривой, см. https://bugzilla.rpmfusion.org/show_bug.cgi?id=6730).
Дискорд тоже: `discord --start-minimized`
    (если ставил моим скриптом на федоре, `/usr/local/share/Discord/Discord --start-minimized`).

[visual-customization]
Меньше промежутки между значками на рабочем столе (по дефолту не делай)
На выбор:
    A. Настройка "Показывать значки на основном дисплее" (не знаю, почему она влияет). Или...
    B. Создай файл `~/.config/gtk-3.0/gtk.css`, если его нет. Впиши туда:
    * {
        -XfdesktopIconView-cell-spacing: 2px;
        -XfdesktopIconView-cell-padding: 2px;
        -XfdesktopIconView-text-width-proportion: 1.4;
    }
    В оригинале советовали использовать 1.7 вместо 1.4, на твое усмотрение.

[+outdated] [visual-customization]
Убираем квадратные скобки в названиях свернутых окон в панели
Открываем "редактор настроек" (xfce4-settings-editor), в нем открываем раздел xfce4-panel.
Там находим пункт `/plugins/plugin-N`. N такое, чтобы напротив него было написано `tasklist`.
Нажимаем `Создать свойство`, имя ставим `/plugins/plugin-N/label-decorations`, тип bool (логический), значение false.

[swap] [memory]
Размер swap, его изменение
Размер свопа можно проверить так: grep Swap /proc/meminfo
Если хочешь больше свопа, тогда...
Во-первых, выясни как у тебя сделан своп, файлом или разделом: cat /proc/swaps
Должен сказать `Type file`. Если вдруг `Type partition`, то, наверное, нужно ресайзить раздел gparted-ом (только как-то его отключить сначала, либо с лайв-флешки?).
Теперь, временно выключаем своп:
    sudo swapoff -a
Изменяем размер своп-файла (убедись, что название файла (`/swapfile`) совпадает с выводом `/proc/swaps`).
Заметь, `bs` *умножается* на `count` (bs=1G count=4 -> 4 гига).
    sudo dd if=/dev/zero of=/swapfile bs=1G count=4
Доводим до ума файл:
    sudo mkswap /swapfile
Включаем своп обратно:
    sudo swapon /swapfile
Проверяем эффект:
    grep Swap /proc/meminfo

[-useful-packages] [disk-usage]
Диск забит, как определить чем?
Минималистичный, медленный вариант:
    sudo apt install ncdu
    ncdu /
Хороший вариант:
    sudo apt install duc
    Все команды ниже выполнять на произвольных папках.
    Под sudo нужно выполнять или все, или никакие (потому что БД с файлами будут отдельные). Без sudo не сможем посмотреть защищенные файлы.
    Сканируем диск: (это нужно делать каждый раз, иначе информация будет старая)
    sudo duc index -p /
    Отображаем результат:
    * Графически: sudo duc gui /
    * В терминале, интерактивно: sudo duc ui /
    * ...

[-initial-setup] [bash] [completion]
Регистро-независимые подсказки в bash
Для всех:
    Дописать в конец `/etc/inputrc` строку:
        set completion-ignore-case On
Для себя:
    Дописать ту же строку в `~/.inputrc`.
    Если нет такого файла, создать его и в начало поставить строку `$include /etc/inputrc`.

[-initial-setup] [clock] [date] [time]
Нормальные форматы даты/времени:
    Короткий: (для часов в таскбаре)
        %-d %b, %R
    Длинный: (для lightdm-gtk-greeter, почему-то двойные пробелы там не работают)
        %A, %-d %B %Y, %R:%S
    Тултип часов:
        %A,  %-d %B %Y,  %R:%S%nМесяц %-m,  зона %Z (%:::z)
    Для времени изменения файлов:
        %d.%m.%Y, %H:%M

[-install] [-useful-packages] [live-usb]
Создание загрузочной флешки из линукса
На убунте есть инструмент с гуи:
    sudo apt install usb-creator-gtk
Но он вроде тянет только deb-based системы, а другие писать отказывается, т.е. могет ubuntu но не manjaro?
Альтернатива:
    в gnome-disk-utility нажми "восстановить диск из бекапа" (именно диск, а не раздел), и дай ей образ.

[-install] [-useful-packages] [live-usb]
Кастомизируем установочный образ убунты
    sudo apt-add-repository ppa:cubic-wizard/release
    sudo apt update
    sudo apt install cubic

[-useful-packages] [remote-desktop]
Удаленный рабочий стол
Показать существующий стол удаленно:
    Поставь пакет `tigervnc-scraping-server`.
    Установи пароль команой `vncpasswd`.
    Запусти сервер с помощью `x0tigervncserver -localhost=yes -PasswordFile=/home/holyblackcat/.vnc/passwd`.
    Здесь `-localhost=yes` пропускает подключения только с localhost, потому что у нас кроме пароля ничего нет. `=no` - наоборот. Как-то еще можно настроить заход только по сертификату.
    Может быть нужен флажок `-display=:0` или `-display=:0.0`, менее вероятно с другим числом (переменная окружения `DISPLAY`).
    Если ты рут и хочешь экран другого пользователя (или возможно если ты зашел по ssh?),
        сначала нужно сделать `export XAUTHORITY=/home/OTHER_USER/.Xauthority`.
    Чтобы подключиться с другой машины, используй SSH-тоннель:
        К ssh добавь флаг `-L localhost:5900:localhost:5900`, а из vnc коннекться к `localhost`.
    Теоретически, к номеру порта приплюсовывается номер DISPLAY-я.
Как подключиться:
    На линуксе пакет `tigervnc-viewer`.
    Под винду на их сайте есть экзешник `vncviewer`.

[-initial-setup] [-useful-packages] [ssh]
Настройка ssh-сервера
sudo apt install ssh
На федоре выключи авторизацию по паролю!! `sudo mousepad /etc/ssh/sshd_config`, там найди PasswordAuthentication, раскомментируй и исправь на no.
На федоре не забудь `sudo systemctl enable sshd`.
Создай файл `~/.ssh/authorized_keys`, туда впиши строку с публичным ключом.
Убедись, что ты владелец и файла и папки, и что стоят правильные права:
    chmod 700 ~/.ssh
    chmod 644 ~/.ssh/authorized_keys
    chmod 644 ~/.ssh/*.pub
    chmod 600 ~/.ssh/приватные_ключи
Если потом захочешь заходить на сервер через PuTTY (хороший виндовый клиент), приватный ключ надо будет переработать его `puttygen`-ом - пересохранить в родной формат.

[vi]
Текстовый редактор vi для чайников
В дефолтном режиме в нижнем-левом углу стоит символ `-`.
Escape - вернуться в дефолтный режим.
`i` - перейти в режим ввода текста. (Символ `I`.)
`:` - перейти в режим ввода команд. (Символ `:`.)
    Здесь команды вводятся текстом и завершаются ентером, работает бэкспейс.
    q - выход (не работает если есть несохраненные изменения)
    !q - принудительный выход без сохранения
    wq - выход с сохранением

[-initial-setup] [drivers] [sensors]
Мониторим температуру
Проц/видюха/...:
    Убунта:
        sudo apt install lm-sensors
    Manjaro:
        pamac install lm_sensors
    sensors
Жесткий диск:
    sudo apt install hddtemp
    sudo chmod u+s `which hddtemp` # Чтобы работал без sudo.
    hddtemp
Видюха от nvidia:
    nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader
Чтобы делать это с комфортом:
    Запусти `sensors -u` и найди нужные значения.
    Вывод разделен пустыми строками на устройства. Первая строка после пустой - имя устройства.
    Научись выпарсивать значения.
        Пример скрипта:
            #!/bin/sh
            sensors -u | awk '
            /^$/{x=""}
            /^[^ ].*:$/{y=$0}
            x==""&&/k10temp-pci-/{x="cpu"}
            x==""&&/amdgpu-pci-/{x="gpu"}
            x=="cpu"&&y=="Tctl:"&&/input/{cpu=$2}
            x=="gpu"&&y=="edge:"&&/input/{gpu=$2}
            END {
                "hddtemp -n /dev/sda" | getline hdd;
                printf "CPU:%.0f GPU:%.0f HDD:%s\n",cpu,gpu,hdd
            }'
        Здесь находятся:
            температура проца (имя устройства содержит "k10temp", в нем в группе "Tdie:" ищется параметр "temp1_input")
            температура видяхи (имя устройства содержит "amdgpu", в нем в группе "edge:" ищется параметр "temp1_input")
            температура hdd (находится отдельно командой hddtemp)
Можно еще показывать результаты в панели, для этого `sudo apt install xfce4-genmon-plugin`.
    Туда можно зафигачить тот же скрипт, но если хочешь цвета, придется пользоваться специальной XML-разметкой, например вот так: (упрощенный вариант без hdd, рекомендуется шрифт arial 7, период 5с)
        #!/bin/sh
        sensors -u | awk '
        /^$/{x=""}
        /^[^ ].*:$/{y=$0}
        x==""&&/k10temp-pci-/{x="cpu"}
        x==""&&/amdgpu-pci-/{x="gpu"}
        x=="cpu"&&y=="Tctl:"&&/input/{cpu=$2}
        x=="gpu"&&y=="edge:"&&/input/{gpu=$2}
        END {
            printf "<txt><span color='\''#666'\''>CPU </span><span color='\''#0af'\''>%.0f</span>\n",cpu
            printf "<span color='\''#666'\''>GPU </span><span color='\''#f66'\''>%.0f</span></txt><tool>Сенсоры</tool>",gpu
        }'

[-initial-setup] [-useful-packages] [arch] [yay]
Настраиваем AUR на арче
В Manjaro это все встроено в pamac, там ничего делать не нужно.
Нужно выбрать программу-менеджер, чтобы руками не билдить. `yay` хорош.
    sudo pacman -S --needed git base-devel && git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si && cd .. && rm -rf yay
.
    Если он тут захочет ставить ??-debug пакеты (рядом с каждым установленным), то...
        Просто потом руками их удаляй.
        Есть фикс, но наверное лучше так не делать, чтобы потом конфликтов не было.
            sudo nano /etc/makepkg.conf
                и там поставить `!` перед `debug` в строке `OPTIONS=...`.
.
    # Initial setup from readme at: https://github.com/Jguer/yay
    yay -Y --gendb
    yay -Syu --devel
    yay -Y --devel --save
.
Дальше обновляйся через `yay` (без аргументов - как `pacman -Syu`, но в остальном флаги как у pacman-а)
Пакеты из AUR ищи и ставь через `yay` (флаги как у `pacman`), а обычные можно как раньше.

[arch] [pacman] [yay]
pacman для чайников
Если тебе нужен AUR, используй `yay` вместо `sudo pacman`
    * `yay` обычные пакеты тоже понимает
    * `yay` запускай без sudo. Если его добавить, он печатает варнинг про это.
ОСНОВЫ:
    Предупреждают не делать partial updates - если обновил базу данных, то обязан обновиться до установки новых пакетов.
    dry-run: `-p` или `--print` (для всех команд)
    обновить:  yay
        без AUR:  pacman -Syuu    # или -Syu, тут `uu` разрешает откат версий
        без AUR, только проверить:  checkupdates
    удалить лишние пакеты:  sudo pacman -Qdtq | sudo pacman -Rns -
        если скажет "empty stdin", значит нечего удалять
        часть до палки - список пакетов, можешь отдельно ее позвать
        это также удаляет зависимости, которые ставятся при сборке из AUR
        усиленный вариант (ищет круговые зависимости, избыточные зависимости, ...):
            список:        pacman -Qqd |      pacman -Rsu - -p
            удалить:  sudo pacman -Qqd | sudo pacman -Rsu -
    установить:  pacman -S ПАКЕТ
        --needed - не переустанавливать уже установленное
        возможно из AUR:  yay -S ПАКЕТ
            дополнительно редактировать скрипт сборки:  VISUAL=nano yay -S ПАКЕТ --editmenu
        из локального файла:  pacman -U   # прямые URL на архив тоже понимает
    искать:  pacman -Ss REGEX
        установленные пакеты:  pacman -Qs REGEX
        Добавь ^ перед регуляркой чтобы искать тоьлко по именам
    удалить:  pacman -Rs ПАКЕТ
        s - удалить лишние зависимости (а-ля `apt autoremove`)
        n - удалить конфиги (а-ля `apt purge`)
СПИСКИ:
    все установленные:     pacman -Q
        явно:              pacman -Qe
        неявно:            pacman -Qd
        неявно и не нужны: pacman -Qdt
        не из реп (AUR и ручные): pacman -Qm
        из реп (не AUR и не ручные): pacman -Qn
    содержимое группы:     pacman -Sg ГРУППА
    измененные конфиги: pacman -Qii | awk '/\[modified\]/ {print $(NF - 1)}'
        Если пакет их обновит, придется решать конфликты.
ПОИСК:
    информация о пакете:
        из репозитория:  pacman -Si ПАКЕТ
        локальный:       pacman -Qi ПАКЕТ
    список файлов в пакете:
        из репозитория:  pacman -Fl ПАКЕТ
            обновить базу файлов:  pacman -Fy
        локальный:       pacman -Ql ПАКЕТ
    какой пакет предоставляет файл:
        из репозитория:  pacman -F ФАЙЛ
            обновить базу файлов:  pacman -Fy
        локальный:       pacman -Qo ФАЙЛ
    проверить, что файлы пакета на месте: pacman -Qk ПАКЕТ  # kk - проверять свойства файлов тоже
ОТМЕТКИ явно/неявно установленных пакетов:
    установить неявно:     pacman -S --asdeps ПАКЕТ
    отметить как неявный:  pacman -D --asdeps ПАКЕТ
    отметить как явный:    pacman -D --asexplicit ПАКЕТ

[-initial-setup] [arch] [pacman] [paccache]
Чистим кеш пакетов pacman
Автоматом:
    sudo systemctl enable paccache.timer && systemctl start paccache.timer
Руками:
    только неустановленные: pacman -Sc
    все:                    pacman -Scc

[-initial-setup] [-useful-packages]
Полезные пакеты
    linux-headers linux-lts-headers (хедеры ядер - под каждое ядро которое ты поставил, эти были `linux` и `linux-lts`; без них могут не взлететь DKMS - автосборка некоторых установленных модулей под ядра)
        ^ arch ONLY
    bash-completion (автоподстановки для баша)
    less
    bc           (простенький консольный калькулятор)
    moreutils    (команда sponge и прочее)
    locate       (поиск файлов - если ругается, сделай `sudo updatedb`)
    man
        есть еще `man-pages-ru`, но я б не ставил
    nano nano-syntax-highlighting
    firefox
        arch,manjaro -> + firefox-i18n-en-us firefox-i18n-ru
    google-chrome
        ^ arch-aur (опенсурсный хромиум не ставь, там кодеков недостает)
    thunderbird
        arch,manjaro -> + thunderbird-i18n-en-us thunderbird-i18n-ru
    noto-fonts   (минимальные нормальные шрифты)
        ^ arch, другие сами его ставят
    gcc gdb
    clang lld lldb
        ubuntu -> [ставь новую версию из кастомного репозитория]
        fedora -> + clang-tools-extra
    patchelf     (патчим исполняемые файлы, например меняем в них путь к динамическим библиотекам, т.е. rpath)
    git make pkgconf
    cmake
        ubuntu -> + cmake-qt-gui
        fedora -> + cmake-gui
    ninja
        fedora -> ninja-build
    kdiff3       (разрешитель конфликтов для git-а)
    wine
    qalculate-gtk (калькулятор)
    gnuplot      (построитель графиков, его может использовать qalculate)
    audacious    (музкальный проигрыватель; на федоре на забудь поставить плагины на форматы файлов, ниже есть инструкция)
    vlc          (проигрыватель видео)
        ubuntu -> + vlc-l10n
    net-tools    (ifconfig и другие команды работы с сетью)
    zip unzip    (zip-архивы)
    p7zip        (7z-архивы, )
        федора: + p7zip-plugins
    unrar        (работа с rar-архивами)
        ubuntu -> + rar (на других дистрибутивах это какой-то странный несвободный пакет)
    zstd         (поддержка zstd-архивов для tar и др.)
    geeqie       (нормальный просмотрщик изображений)
    krita        (граф. редактор и локализации для него)
        ubuntu -> + krita-l10n
    gimp         (граф. редактор)
    deluge-gtk   (торрент-клиент, более приличный чем дефолтный transmission)
        ubuntu -> deluge
    xdotool      (управление окнами из консоли; альтернатива: wmctrl)
    yt-dlp       (скачивание видосов с ютуба, и многих вещей со многих сайтов; это форк, оригинал был youtube-dl)
        manjaro -> не устанавливай опциональную зависимость phantomjs, выдает "пакет не найден"
    dconf-editor (редактор настроек)
    htop         (модный консольный диспечер задач)
    gparted      (редактор разделов)
    btrfs-assistant (управление файловой системой btrfs)
        arch -> нет такого, только в aur
    gnome-disk-utility (манипуляция жесткими дисками, в т.ч. проверки)
    gnome-font-viewer (просмотрщик шрифтов, не особо удобный)
    ncdu         (то же самое, но минималистичный консольный вариант)
    xfce4-genmon-plugin (показ на панели вывода произвольных команд)
    ffmpeg       (конвертер форматов видео) ######### На федоре есть -freeworld? И для хрома еще посмотри
    gnome-games  (набор казуальных игр)
        ^ ubuntu | manjaro,arch - тут это какой-то левый лаунчер, не ставь
    aisleriot    (разные пасьянсы в одном приложении)
    radeontop    (мониторим видюшку AMD)
    cloc         (счетчик строк кода)
    piper        (настраиваем подсветку мышек и т.п.)
    fontforge    (редактор шрифтов) (захвати еще python3-fontforge, для некоторых скриптов)
    potrace      (утилита в пару к fontforge для преобразования из растра в вектор)
    qpdf         (разные манипуляции с pdf)
    guestfs-tools (монтировать диски от виртуальных машин)
        ^ manjaro,arch  |  ubuntu,fedora -> libguestfs-tools
    lm_sensors   (датчики температуры и прочего)
    peek         (запись гифок с экрана)
    gifski       (конвертер видео в качественные гифки)
    imagemagick
        fedora -> ImageMagick
    virtualbox
        arch,manjaro -> + virtualbox-guest-iso
                        когда спросит про host modules, выбирай dkms (потому что второй только для обычного kernel, а вдруг у тебя lts)
        fedora -> VirtualBox
        ubuntu -> + virtualbox-ext-pack
    tiled        (редактор карт)
    gucharmap    (таблица символов, видимо та же, что по дефолту стоит на убунте)
    freecad      (инженерное проектирование)
    audacity     (звуковой редактор; бинарники с сайта у них кривые)
        fedora -> audacity-freeworld (из rpmfusion, без суффикса есть в стандартной репе, но он хуже?)
    telegram-desktop
        fedora -> пакет кривой, качай оффициальный бинарник (https://bugzilla.rpmfusion.org/show_bug.cgi?id=6730)
    discord
        ^ arch,manjaro only?
    steam
        нужен multilib репозиторий, как для wine
        если спросит, какой драйвер vulkan, то для AMD видюх выбирай vulkan-radeon, а не amdvlk (бенчмарк: https://www.phoronix.com/review/radv-amdvlk-july21/3)
        тут ярлык называется `Steam (runtime)`; есть еще пакет `steam-native-runtime` (`Steam (native)`)
            Runtime лучше, советую переименовать его просто в "Steam".
            Смотри https://wiki.archlinux.org/title/Steam/Troubleshooting
            Runtime использует родные стимовские либы. Native использует системные либы.
    renderdoc    (отладчик графики)
    fbgrab       (скриншоты напрямую из linux framebuffer для без-гуишной консоли)
    radeontop    (состояние видюхи AMD)
    lmms         (музыкальный редактор)
        ubuntu -> вроде не работают плагины VST? Ставь официальный AppImage вместо пакета, там работют.
    tree         (печатаем дерево папок)
    obs-studio   (записываем видео с экрана)
    lightdm-gtk-greeter-settings (гуй настройки lightdm, не путай с lightdm-settings, который на самом деле настраивает slick-greeter, и тянет его вместе с собой)
    yad zenity   (рисование диалогов из консоли; первое - форк второго, больше фичей и не новомодный гуй, но пусть будут оба)
    lshw         (выводит информацию о железе в консоль)
    perl-rename  (массовое переименование файлов)
        ubuntu -> rename  (проверь)
    gst-plugins-good gst-plugins-bad gst-plugins-ugly gst-libav (кодеки; libav - он для H.264, ugly - возможно запатентованные кодеки, bad - нестабильные кодеки (запатентованные и нет))
        ^ arch, manjaro
    inetutils    (утилита hostname и прочие)
        ^ arch, manjaro
    visual-studio-code-bin
        ^ arch-aur, manjaro
    elementary-xfce-icons
        ^ arch-aur, manjaro
    onlyoffice-bin
        ^ arch-aur | manjaro -> onlyoffice-desktopeditors
Гуи архиватора. Выбери между
    `xarchiver`   или   `engrampa`
        Обычно стоит один из них. Если ставишь другой,
        удали предыдущий, чтобы ассоциации переставились.
    menulibre    (гуй управления .desktop-файлами)
        ^ только arch-aur и федора, остальные его сами ставят
Только убунта:
    duc          (определение того, что занимает больше всего места на диске - очень мощный пакет)
        fedora -> собирается из AUR, нафиг его
    hardinfo     (информация о системе)
        fedora -> собирается из AUR, нафиг его
    libavcodec-extra (дополнительные кодеки, которые могут быть защищены патентами - часть пакета ubuntu-restricted-extras)

[-initial-setup] [flatpak] [flathub]
Ставим flatpak
    sudo apt install flatpak
Добавляем flathub - дефолтный репозиторий flatpak
    flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo

[-initial-setup]
Неочевидные ошибки в настройках
Заметь: на Федоре настройки хоткеев для оконного менеджера могут работать через жопу после изменения и до перезахода в систему.
* Диспечер окон (дополнительно) -> Эффекты -> Отображать полноэкранные окна сразу = (правильно) ДА
    Вроде как уменьшает лаги полноэкранных приложений, да и вообще система кажется отзывчивее.
* Терминал -> Прокручивать по мере вывода = (правильно) НЕТ
    Тогда он будет прокручивать только если у тебя скролл уже до упора внизу (т.е. правильное поведение).
* Синхронизация времени.
    Проверь `systemctl status systemd-timesyncd` и `systemctl status ntpd`, может быть оно уже включено.
    * Manjaro -> ТРЕБУЕТ ВКЛЮЧЕНИЯ в manjaro settings manager
    * В настройках xfce может быть ошибочно написано "вручную". Проверяй командами выше.
* Manjaro settings manager -> языковые пакеты -> поставь то что он предлагает
* xfce4-screenshooter не может скопировать картинку в буфер обмена
    Сначала попробуй просто ребут, тут нет уверенности.
    Вроде так бывает если убрать clipman (менеджер буфера обмена) из автозагрузки. Включи его обратно. Может отключить сохранение истории, если хочешь.
    После добавления нужно перелогиниться или ребутнуться, чтобы он включился?

[-initial-setup] [video] [codecs] [dvd]
Чиним не воспроизводящиеся dvd-диски
Вариант раз: ставим libdvd
        sudo apt install libdvd-pkg
    Он спросит, хочешь ли ты авто-обновления. Почему бы и нет.
    На всякий случай еще делаешь так: (это ручное обновление)
        sudo dpkg-reconfigure libdvd-pkg
    Потом используй VLC-плеер.
Вариант два: меняем код региона dvd-привода
        sudo apt install regionset
    Он позволяет вписать в dvd-привод новый код региона.
    Смотри список кодов в `less /usr/share/doc/regionset/README`.
    Потом делай так:
        sudo regionset /dev/sr0 # Здесь имя DVD-привода. Можно разведать его в VLC-плеере.

[-initial-setup] [+outdated] [visual-customization]
Что за куча модулей в панели xfce?
Сейчас самый модный - "Модуль стаусного трея" с иконкой-рупором. Остальные модули уведомлений не нужны.
Если этого нет:
    Оставь "область уведомлений", а за ней "модуль оповещений статуса" (фиолтеовый кружочек), убери "индикаторы" (серый кружочек) и наверное еще "модуль оповещений".
Для управления питанием ставь отдельный модуль в панель, а не включай иконку в трее в менеджере питания.
    Это дает изменение яркости скроллом, как минимум.

[visual-customization] [icons] [bug-workaround]
Иконка значка на рабочем столе сбрасывается!
Открой выбор инонки и нажми "файлы изображений", там выбери нужный файл как картинку. Должно сработать. Ищи в `/usr/share/pixmaps`.

[-initial-setup] [visual-customization]
Нормальая тема для терминала (как в MSYS2 на винде)
Выбери тему XTERM, потом сделай вот что:
    Скопируй (драг-н-дроп) из цветов светло-серый, поставь его цветом текста. А цветом фона поставь черный (0,0,0).

[-initial-setup] [visual-customization] [workspaces]
Относительное расположение workspaces (какой относительно какого слева/справа/...)
Это кастомизируется через одно место.
Поставь на панель виджет воркспейсов и переключи его в режим эскизов. Потом поиграй с количеством строк в нем, чтобы все выглядело хорошо.
Он сам выставит относительное расположение, чтобы оно совпадало с эскизами. Потом эскизы (и наверное весь виджет) можно убрать.

[firefox] [-initial-setup]
Переносим существующий профиль
Обычно достаточно просто скопировать папку .mozilla (на всякий случай лучше `cp -af`).
Если что-то не фурычит, открывай `about:profiles`, там выбирай профиль `default-release`, а старый потом сноси.

[firefox] [-initial-setup] [language]
Язык в firefox слетает на каждом обновлении
Язык может быть поставлен как пакет в системе (`firefox-i18n-ru` в manjaro), а может быть поставлен самим браузером.
Системный пакет лучше, он не слетает. Как убедиться, что его используешь?
* Переключи на английский.
* Удали русский в настройках языка.
* Удали плагин русского языка в плагинах (если нельзя, значит уже стоит системный - пропусти этот шаг и продолжай)
* Закрой FF
* Удали firefox-i18n-ru и вообще firefox-i18n-*
* На всякий случай открой FF и закрой обратно.
* Через "Manjaro Settings Manager -> языковые пакеты" (на убунте - через их настройки языка, на других ОС руками?)
    установи `firefox-i18n-ru`, и, важно, `firefox-i18n-en-us`
    (manjaro settings manager сам добавляет второй)
    (пока я не поставил второй, у меня не подхватывался первый - либо это manjaro settings manager что-то подхимичил)
* В firefox выбери русский язык (возможно он даже сам выберется).
    При этом НЕ должно быть нужно делать "add language" - это признак не подхватившегося пакета.
* Проверь, что в плагинах русский язык отмечен как неудаляемый - это признак, что он подхватился из пакета.

[firefox] [+outdated] [minor] [visual-customization]
В firefox видео разворачивается на полный экран с медленной анимацией
В `about:config` поставь `full-screen-api.transition-duration.leave`
и `full-screen-api.transition-duration.enter` в `0 0`.

[firefox] [minor]
В firefox скролл слишком медленный
В `about:config` поставь `mousewheel.min_line_scroll_amount` в 30 или что-то подобное.

[firefox] [minor] [visual-customization]
В firefox шрифты убогие
Скачай офф. виртуалку с 10 виндой и достань из нее шрифты, тут где-то есть инструкция.

[-initial-setup] [firefox] [scale] [scaling]
Меняем глобальный масштаб в Firefox
В `about:config`, меняй `layout.css.devPixelsPerPx` на нужный множитель. -1 = автоопределение.
На ноутбуке хороший масштаб - 1.24.

[-useful-packages] [audio] [equalizer]
Нужен эквалайзер
sudo apt-get install pulseaudio-equalizer
Дальше запускать командой `qpaeq`. Чтобы она не ругалась, надо сделать вот так:
    pactl load-module module-equalizer-sink
    pactl load-module module-dbus-protocol
А потом в настройках звука переключится на свеже-появившийся "вывод с эквалайзером".
Но это на один раз. Чтобы работало само, надо сделать:
    sudo nano /etc/pulse/default.pa
И туда в конец вписать:
    load-module module-equalizer-sink
    load-module module-dbus-protocol
Говорят можно сделать юзер-специфичный конфиг, но у меня с ним не срослось.

[-initial-setup] [bug-workaround] [audio] [video] [vlc]
В VLC-player звук прерывается какое-то время после перемотки
Источник: https://askubuntu.com/a/649101
В настройках, в обычном "простом" режиме, сверху выбери Audio,
потом "Output module:" = "ALSA audio output",
и дальше "Device:" = "PulseAudio Sound Server".
Потом перезапусти плеер.

[-initial-setup] [terminal]
Меняем начальную директорию терминала
В настроках есть такой пункт, но он делает не то что нужно: он не влияет на самую первую открытую вкладку, а только на следующие.
Решение - добавить параметр `--default-working-directory=...` в следующие места:
* В настройки значка терминала в меню пуск.
* В настройки занчка терминала на таскбаре, если он у тебя там есть.
* В настройки хоткеев (которые в настройках клавиатуры).
Теоретически в первых двух пунктах можно вместо этого поменять рабочую директорию, но вот в третьем пункте так не сделать.

[minor] [sudo] [gui]
Графическая замена sudo
pkexec <команда>

[appimage]
Как интегрировать Appimage-программы в систему
Есть программа appimaged, которая делает это сама, но она чуть-чуть мутная (на ноябрь 2020). Лучше руками.
Качаешь программу куда угодно, делаешь ей `chmod +x`.
Потом через гуи создаешь desktop-файл (ПКМ по меню <s>пуск</s>whisker -> изменить приложения).
Чтобы получить иконку программы, запусти appimage-файл с флагом `--appimage-mount` (вообще, глянь `--appimage-help`). Скопируй иконку в `.local/share/icons/` (из папки, куда он примонтировал). Нажми Ctrl+C чтобы размонтировать appimage.
Как писал здесь же, иконка может отказываться ставиться. Тогда выбери ее как "картинку", а не как "иконку".

[minor] [bug-workaround] [vscode]
Шорткат Ctrl+Shift+E делает непонятно что.
В старой версии gtk3 он был захардкожен для ввода emoji. В новой это выпилили.
Если эта проблема возникает в приложении из snap store, попробуй поставить его другим способом. (Помогло для vscode.)

[-initial-setup] [-useful-packages] [gcc]
Новенький gcc на старой убунте
sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa  (если не работает, попробуй .../test вместо .../ppa)
Отмена: та же команда с ключем -r

[-initial-setup] [-useful-packages] [clang]
Ставим новый clang на убунту
wget https://apt.llvm.org/llvm.sh
chmod +x llvm.sh
sudo ./llvm.sh 18
sudo apt install clang-tidy-18 clang-format-18 clang-tools-18 #Дополнительные пакеты, которые сами не ставятся, но репозитории для них подхватываются.
(Полный список полезных пакетов: clang-18 clang-tidy-18 clang-tools-18 lld-18 lldb-18 clangd-18 clang-format-18)
(Еще можно поставить: `libc++-18-dev libc++abi-18-dev`, но они любят конфликтовать с пакетами.)
(Этот скрипт добавляет в апт репозиторий llvm, и скачивает оттуда нужные пакеты. Смотри какие именно в самом скрипте.)

[boot] [uefi] [bios] [minor]
Перезагрузка в настройки uefi (не уверен, работает ли с биосом?)
systemctl reboot --firmware-setup

[steam] [minor]
Где лежат игры в Steam'e
~/.steam/steam/SteamApps/common

[visual-customization] [minor] [wallpaper]
Как найти текущие обои/фон рабочего стола
xfconf-query -c xfce4-desktop -l | grep last-image | xargs -n1 -- xfconf-query -c xfce4-desktop -p
(будет список картинок для разных рабочих мест и т.п.)

[network] [wifi] [ethernet]
Расшарить вайфай через провод
В списке соединений, на проводном соединении (не на вайфае), в настройках IPv4 выставь "Метод: предоставить сеть другим компьютерам".

[-useful-packages] [minor] [pdf]
Манипуляция pdf
sudo apt install qpdf
qpdf --empty --pages файл1.pdf диапазон1 файл2.pdf диапазон2 файл3.pdf диапазон3 -- результат.pdf
Пример диапазона: `1,10-12,20-z` (`z` означает последнюю страницу). Диапазон можно не указывать, тогда будут использованы все страницы.
(Если хочется сохранить разную метадату отдного из файлов, укажи его название вместо `--empty`, а после `--pages` вместо его названия используй `.`.)
(Есть еще другой похожий пакет, `pdftk`, но он весит много и какой-то мутный.)

[boot] [diagnostic]
Как понять, почему система долго грузится?
systemd-analyze blame
Если написать просто `systemd-analyze`, выдаст время загрузки.

[-initial-setup] [git]
Начальная настройка git
    git config --global user.name "HolyBlackCat"
    git config --global user.email "holyblckcat@gmail.com"
    git config --global core.editor nano
    git config --global merge.tool kdiff3 # Запускать командой `git mergetool` когда есть конфликты.
    git config --global diff.guitool kdiff3
Принудительно SSH вместо HTTPS для гитхаба при пуше.
    Это лучше, чем руками указывать SSH-ный URL, потому что на сабмодули будет действовать само.
    Только для пушей: (удобно для публичных реп)
        git config --global url.git@github.com:.pushInsteadOf https://github.com/
        # Отменить можно так: git config --global --unset url.git@github.com:.pushInsteadOf
    И для пушей, и для пуллов: (удобно для приватных реп) (можно вписать это локально только для одной приватной репы, если там сабмодули)
        git config --global url.git@github.com:.insteadOf https://github.com/
        # Отменить можно так: git config --global --unset url.git@github.com:.insteadOf
Дефолтное имя ветки, если тебе это важно:
    git config --global init.defaultBranch master
Проверить текущий конфиг:
    git config --list --show-origin

[-initial-setup] [git] [vscode]
GUI для интерактивного rebase в VSCode
Нужно поставить расширение Git Lens. Теперь если установить VSCode как редактор для гита, то ребейз будет выполняться через гуи.
Есть два варианта:
1. VSCode только как редактор для ребейза. (думаю это лучше)
    #git config --global core.editor nano
    git config --global sequence.editor 'code -w'
2. VSCode как редактор для всего.
    git config --global core.editor 'code -w'

[git] [vscode]
В VSCode, в подсказках слишком маленький размер шрифта на подписях справа
Требуется исправление CSS. Есть расширения, которые это делают, но там все через одно место, и проще руками.
Ниже приложен скрипт, он делает две вещи:
* Добавляется строка в файл css.
* Исправляются контрольные суммы, чтобы не было варнинга.
И то и другое можно делать руками. Если захочешь руками, используй mousepad; nano не тянет огромные строки.
    https://gist.github.com/HolyBlackCat/549f686857a3519fb14b59ea5b0cfbf2
И он же сжатый (разжимать `base64 -d 1.txt | gzip -d >vscode-fix-suggest-font-size.sh`, был сжат `gzip -c9 vscode-fix-suggest-font-size.sh | base64`):
    H4sICNgnMmICA3ZzY29kZS1maXgtc3VnZ2VzdC1mb250LXNpemUuc2gApVRtb9NIEP7uXzGYIrdV
    bRPEoVOgQVUF3AnxItK7L5dD2qzH8VB71+ys4wTCf2d22xKKkDjp8iW78/I8M8/O+O6dckmmXCpu
    kuQuPKcNMvgGobbGA9MnBDLRwMNqhezJGhipWqGHQ/Fo2/VKe1gTjifgbQx1tGo82DpexEtrBGyx
    Q+OPToRlbEg3QAxWAtxIjJJpgTvVttOrP3SSrIQZN/6mAqzIW3cCuMZgsMNKQDwMfF0yq+6q7j2H
    VtHbO7sUfpbKfQNL8p3qYyQXoeu3yutGws7nc6jIofbt9ob07/k51NQiF3AhxSJ0sbmlNAadlbum
    NbWiUwWj2gYFyHwQhJgsgIXgv0asOLgky6Hq+5YkXNVeupRm3BaGvlIeQ+zZ4G2nPGkRYSvyulDO
    VX9So77koYtQam1JMGJ9o3KGzCr28sIK2Np6kbQRhYl5CKI4CRUVemGsaTOFxvuep2W5EkGGZSHP
    WHaknWVb+3LN2lZYxlwuJw9+f/hokiTSzGlWHof829NxPRk3Y3FcQnFtyq9NRWeN0jZviW9fcmfH
    mbAbL7PBs6JTZGZFi7WfFR8H1VJN6PJWLbH9HDjzwDmd3L9/D+5Q11vnlfFf/i9fnNdZUaFX1PIv
    6bLk4uzdi2cXosbAruRGOSyjYg7ZDk6LaPLIpR2ClOVo3eUSjW72J6HiS2/7yF9o5iw5/+PZ+cv5
    X6/mv0KVV6wG7YsPbE2WJD4on9eQHlwVlcJuB4eoGwvZn2YtElbglQuqhDEusseAG9maydF3qd/I
    f5a9H7sfARKqYeWwh/zj5nmAmQvAt0Ieh6E1CcgvAp61MvvVFvq4bVWRYMu4d8clDFNcFNHIQyUL
    I98lyDWkMSRHWKQLE3gWKcxmixuuRZrugeQbJjD7sm8BygK0kBPkPULGu8OnT07T//hG6RTSo3/e
    p/8e77KDw676TcC/lx3UeAnZ596R7MbB5Esmps2mgtwJm5ylF3z0UA4sy59xeSrblx1lu+zWA+z7
    ePMyqSn5CtAoQxKhBQAA

[-useful-packages] [git] [passwords]
Сохраняем пароли в гите
Лучше рассмотри ssh-ключи, потому что при способе ниже твои пароли защищены только общим паролем от профиля. Вероятно на них можно повесить отдельный пароль, но пока непонятно как.
Если уверен:
    sudo apt install libsecret-1-0 libsecret-1-dev libglib2.0-dev
    sudo make -C /usr/share/doc/git/contrib/credential/libsecret
    git config --global credential.helper /usr/share/doc/git/contrib/credential/libsecret/git-credential-libsecret
Готово! Для управления паролями из гуи сделай:
    sudo apt install seahorse
Чтобы сбросить настроку, повтори `git config ...` с "" вместо последнего параметра, и в гуе сотри все пароли.

[-initial-setup] [keyboard] [shortcuts]
Нормальные шорткаты:
    Win+C              qalculate-gtk
    Win+E              mousepad
    Win+F              exo-open --launch FileManager
    Win+R              xfce4-appfinder
    Win+T              xfce4-terminal
    Win+W              exo-open --launch WebBrowser
    Win+L              xflock4
    Ctrl+Shift+Escape  xfce4-taskmanager
    Ctrl+Escape        xfce4-popup-whiskermenu
    PrintScreen        xfce4-screenshooter -fc
    Shift+PrintScreen  xfce4-screenshooter -rc
    Alt+PrintScreen    xfce4-screenshooter -wc
.
    Win+D              Показать рабочий стол
    Win+PgUp/PgDown    Пред/след рабочее место
    Shift+Win+PgUp/PgDown  Окно на пред/след рабочее место

[-initial-setup] [lightdm]
Двигаем панель в lightdm gtk greeter
    sudo nano /etc/lightdm/lightdm-gtk-greeter.conf
Туда пиши:
    panel-position = top
или
    panel-position = bottom

[-useful-packages] [file-formats]
Открываем rpm-пакеты как архивы
    sudo apt install rpm2cpio
Им конвертим в .cpio, потом открываем менеджером архивов.

[wine] [minor]
В программах в wine не енфорсится минимальный размер окна
`winecfg -> разрешить менеджеру окон управлять окнами wine -> нет`, но это порождает другие проблемы.
Лучше использовать только временно, для тестов.

[wine] [mono]
Ставим wine mono
Скачай `wine mono msi` с winehq.org, запусти `wine uninstaller`, там нажми установить и выбери файл.
Рекомендуется делать это в отдельном wine-префиксе (`export WINEPREFIX=/home/$USER/.wine_mono`)

[opengl] [videocard] [drivers] [amd]
OpenGL на AMD на mesa-драйвере не умеет в compatibility-профиль
Запусти с переменной `MESA_GL_VERSION_OVERRIDE=3.3COMPAT` или подобной.
Это только изменяет видимую версию без гарантии поддержки фич, но кажется работает неплохо.

[icons]
Как сделать desktop-файл, с потощью которого можно открывать файлы
В команде нужно упомянуть `%f` (один файл) или `%F` (много файлов).
В зависимости от команды, перед этим возможно стоит поставить `--`.
Есть еще `%u` и `%U` - для 1 и несколько URL (это надмножество файлов).

[-repair] [bug-workaround] [pulseaudio] [audio]
Аудио в какой-то начинает шипеть и на время лечится перезапуском pulseaudio
Попробуй перезапустить pulseaudio:
    systemctl --user restart pulseaudio.service
Проблема скорее всего вернется. Тогда (а может и сразу) сделай вот что:
    Открой конфиг: sudo nano /etc/pulse/default.pa
    Там найди `load-module module-udev-detect` и подпиши через пробел `tsched=0`.
    Потом перезапусти pulseaudio командой выше.

[-initial-setup] [csd]
Убираем CSD в диалогах выбора файлов
CSD = гуй в заголовке окна, в т.ч. выбор имени файла.
На арче по дефолту выключено.
xfconf-query -c xsettings -p /Gtk/DialogsUseHeader -s false

[-initial-setup] [hotkeys]
Делаем так, чтобы Win+R показывал список приложений с иконками
С какой-то версии Win+R стал показывать не список приложений, а просто одинокое текстовое поле.
Чтобы вернуть как было, в настройках клавиатуры замени приложение с `xfrun4` на `xfce4-appfinder`.

[-initial-setup] [bug-workaround] [hotkeys] [autorun]
Убираем странное поведение хоткея Windows
1. Хоткей Windows теперь стал работать как Ctrl+Escape, если одновременно с ним ничего не нажато. Этим он открывает меню whisker.
    Как убрать:
    Это убирается в гуи автозапуска (убирай xcape)
    Если не получается, то можно руками:
        Создаешь файл `.config/autostart/xcape-super-binding.desktop`. Пишешь туда:
            [Desktop Entry]
            Hidden=true
        То же самое происходит, когда отключаешь приложение в гуи автозагрузки.
2. Windows+стрелки может делать черти что, и перенастройка этого хоткея помогает только временно.
    Тогда иди в настройки хоткеев и убери все хоткеи у этих действий. Потом добавь обратно.

[-initial-setup] [hotkeys]
Чиним хоткеи размещения окна в половине экрана (обычно Windows+стрелки)
Есть две причины, почему они могут не работать:
1. На ubuntu может понадобиться сначала отвязать клавиши (может потребоваться дважды отвязать, после первой отвязки вылезает второй хоткей),
    а потом заново привязать обратно.
2. На manjaro ты можешь смотреть не на те хоткеи, у них локализация странная. Правильные - это которые "разместить в X половине".

[autorun]
Убираем автозапуск fcitx
Ты мог поставить fcitx как зависимость для сборки SDL2, и теперь он стартует автоматически, и мелькает в трее.
Как убрать:
    Идешь в настройки языка, там ставишь "метод ввода" не fcitx. Дефолтный - "нет".

[-initial-setup] [amd] [bug-workaround]
Чиним залипший на максимуме memory clock видеокарты AMD, на частоте обновления >60hz
Как проверить, что тебя аффектит:
    sudo apt install radeontop
    radeontop
Если полоска memory clock уперлась в правый край, то аффектит.
Как чинить:
    Скомпилить программу UMC, которая приложена ниже в base64+gzip. Оригинал тут: https://sourceforge.net/projects/umc/files/
        
    Разжимать командой `cat 1.txt | base64 -d | gzip -d >umc.c`.
    Собирать командой `gcc umc.c -o umc -lm`.
    Вызвать ее с параметрами: <w> <h> <refresh> -rbt
    Теперь на пробу суем в xrandr:
        xrandr --newmode "1920x1080x143.98"  346.500000  1920 1968 2000 2080  1080 1083 1087 1157  +HSync -VSync
    Проверь в radeontop что memory clock стал нормальный.
.
    Теперь делаем это постоянным:
        sudo nano /etc/X11/xorg.conf
    Туда набираем: (где после Modeline строка из этой программы, а вместо `HDMI-A-1` - имя порта из выхлопа `xrandr`)
        Section "Device"
            Identifier      "Radeon"
            Option          "monitor-HDMI-A-1" "Samsung"
        EndSection
        Section "Monitor"
            Identifier      "Samsung"
            Modeline "1920x1080x143.98"  346.500000  1920 1968 2000 2080  1080 1083 1087 1157  +HSync -VSync
        EndSection
        Section "Screen"
            Identifier      "Default Screen"
            Monitor         "Samsung"
            Device          "Radeon"
        EndSection
    Все что после `Identifier` - кастомные имена, можно ставить любые.
    Теперь ребутни, и в настройках дисплея выбери этот режим! (И дальше, как уже писал в другом месте, создай в настройках дисплея профиль, и поставь авто-включение.)
.
    Если это почему-то не работает, альтернатива: создать файл `~/.xprofile` и написать туда:
        xrandr --newmode "1920x1080x143.98"  346.500000  1920 1968 2000 2080  1080 1083 1087 1157  +HSync -VSync || true
        xrandr --addmode HDMI-A-1 "1920x1080x143.98" || true
        xrandr --output HDMI-A-1 --mode "1920x1080x143.98" || true
    Этот файлик должен авто-запускаться при логине, но нет никакой гарантии, что эти настройки не слетят, если кто-то поменяет режим дисплея.

[epic-games] [wine]
Устанавливаем Epic Games Store через Wine
Разведай, были какие-то неофициальные клиенты под линукс. Лучше попробуй их, а то в wine клиент тормозит страшно.
Во-первых, нужен НОВЫЙ Wine (`wine-staging`). Установи его как написано на https://wiki.winehq.org/Ubuntu :
    wget https://dl.winehq.org/wine-builds/winehq.key
    sudo apt-key add winehq.key
    # Для убунты 20.04:
    sudo add-apt-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ focal main'
    # ОСТОРОЖНО
    sudo apt install wine-staging
Возможно он предложит удалить полезные вещи. Тогда стой, и попробуй `aptitude` вместо `apt`.
Если будет говорить про `libllvm12`, попробуй удалить его (вместе с клангом, да) и попробовать снова.
Или задаунгрейдить. Для этого сделай `apt show -a libllvm12` чтобы увидеть доступные версии. Будет две, бери старую.
    Поставь ее с помощью `sudo apt install libllvm12=VERSION`.
После этого верни на место кланг, указывая старую версию. Вместе со всеми зависимостями, зависимости выясняй методом проб и ошибок, и на каждой пиши эту старую версию.
Потом отметь зависимости (но не нужные пакеты) командой `sudo apt-mark auto PACKAGES`, чтобы они не считались явно установленными, и потом могли быть удалены, когда перестанут быть нужны.
Итак... Если успешно установил wine, экзешники будут в `/opt/wine-staging/bin/`. Запускай только оттуда!
Предлагается сделать отдельный префикс:
    export WINEPREFIX=~/.wine_epicgames
    wineboot -i
Если предложит Mono, соглашайся, пусть будет.
Теперь, качай Epic Games Store. Ставь комадой:
    wine msiexec /i ???.msi /q
Перейди в папку с экзешником EGS. Он в `drive_c/Program Files (x86)/Epic Games/Launcher/Portal/Binaries/Win64`.
Запускай командой:
    /opt/wine-staging/bin/wine EpicGamesLauncher.exe -SkipBuildPatchPrereq -opengl
Будет долго грузиться. Жди. И лучше не снимай фокус с окна, но не обязательно.

[virtualbox] [btrfs] [cow] [copy-on-write]
Virtualbox тормозит на BTRFS, из-за его copy-on-write. Как чинить
Отключаем copy-on-write на ПАПКЕ:
    chattr +C папка
На существующем файле нельзя отключить, только на папке или на пустом файле можно.
Отключай на папке куда будут создаваться виртуалки.

[virtualbox] [dkms] [drivers] [manjaro]
На Manjaro DKMS для Virtualbox ругается на недостающие хедеры
Хедеры надо поставить, пока не совсем ясно, какой способ самый правильный.
Пока рекомендую так:
    pamac install linux-headers
Он спросит какие хедеры, выбирай для текущего ядра (как в `uname -r`).
Еще, он похоже всегда ставит для текущего ядра в дополнение к тому, что ты выбрал, поэтому ошибиться сложно.

[virtualbox] [usb]
Пробрасываем USB-устройства в VirtualBox
Также это чинит постоянный ворнинг про "не получается опросить USB-устройства".
    sudo apt install virtualbox-ext-pack #Ставим экстеншоны для VirtualBox.
    sudo usermod -aG vboxusers $USER #Добавляем себя в специальную группу, чтобы разрешить доступ к USB.
Наверное стоит перезайти в систему.
В настройках виртуалки теперь появится usb-контроллер 2.0 (возьми его, или как вариант 3.0).
Теперь в список можно будет добавить свое устройство. Если будешь добавлять мышку, приготовься к невидимому курсору, и тому,
что мышка не будет работать снаружи машины, пока она работает. Невидимый курсор лечится в `Win->"Mouse"??->Additional mouse settings->Pointer trail=yes`.

[audacious] [visual-customization] [winamp]
В audacious классический скин от winamp-а
Скачать отсюда: https://www.opendesktop.org/p/1008329/
Zip-архив скопировать в:
    (для всех) /usr/share/audacious/Skins/
    (для себя) ~/.local/share/audacious/Skins/

[-useful-packages] [man] [gui]
Смотрим man pages в браузере:
    sudo apt install groff #Проверь, нужен ли. Скорее да чем нет.
    yelp man:git-log
    #        ^^^^^^^ имя страницы

[-useful-packages] [ip]
Узнать локальный IP-адрес
    hostname -I
На арче такого флага нет, там:
    hostname -i
На арче нужно поставить hostname через `sudo pacman -S --needed inetutils`.
Или:
    sudo apt install net-tools
    ifconfig

[-useful-packages] [razer] [drivers]
Настраиваем девайсы Razer:
    sudo gpasswd -a $USER plugdev
    sudo add-apt-repository ppa:openrazer/stable
    sudo apt install openrazer-meta
Отключаем автозапуск демона openrazer, ниже читай зачем.
    systemctl disable --user openrazer-daemon
Ребут, или хотя бы перезайти в пользователя.
Обрати внимание, дальше мы ставим нестабильную версию Polychromatic, потому что стабильная безнадежно забагована.
Забагованная версия - v0.3.12. Когда у стабильной версии увеличится мажорный номер, можно будет вернуться на нее (заменить `edge` на `stable`).
    sudo add-apt-repository ppa:polychromatic/edge
    sudo apt install polychromatic
Дальше запускай Polychromatic и развлекайся.
Про openrazer-демон:
    При запуске polychromatic включается некий `openrazer-daemon`, и пока он работает, диод scroll lock не отображает раскладку, спецклавиши дурят, и еще что-то.
    Он убивается командой `openrazer-daemon -s`. Убедись, что в момент убийства диод совпадает с раскладой.

[file-formats] [minor]
Монтируем iso как файловую систему
sudo mount -o loop foo.iso target/directory

[minor] [shell]
Сменить пароль
sudo passwd "$USER"
В принципе можно просто `passwd`, но тогда вроде появляются странные требования к сложности пароля.

[minor] [shell]
Сменить дефолтный шелл
chsh -s /bin/bash

[minor] [cron]
Редактировать запуск задач по таймеру
crontab -e

[network] [wifi]
Подключиться к роутеру по wifi без пароля
Сначала нажми кнопку на роутере с двумя стрелочками, потом сделай `sudo wpa_cli wps_pbc`.

[games] [wine]
Устанавливаем BYOND и SS13
НОВЫЙ ВАРИАНТ:
    export WINEPREFIX=$HOME/.wine_byond
    export WINEARCH=win32
    export WINEDEBUG=-all
    winetricks wsh57 mfc42 vcrun2013
    winetricks ie8
    winetricks allfonts # Может не сработать. Тогда: wine corefonts
    wget http://dl.winehq.org/wine/wine-gecko/2.47.1/wine-gecko-2.47.1-x86.msi
    wine uninstaller # Здесь нажать "установить", и выбрать скачанный файл.
    Потом ставим BYOND установщиком - все должно работать.
    Для удобного запуска делаем шелскрипт:
        #!/bin/sh
        export WINEPREFIX=$HOME/.wine_byond
        export WINEARCH=win32
        export WINEDEBUG=-all
        wine $WINEPREFIX/drive_c/Program\ Files/BYOND/bin/byond.exe
СТАРЫЙ ВАРИАНТ:
    Делаем вот так:
        export WINEARCH=win32
        export WINEPREFIX=~/.wine_ss13
        winetricks wsh56 wsh57 jscript mfc42 vcrun6
        winetricks ie8
    Потом ставим BYOND установщиком - все должно работать.
    Для удобного запуска делаем шелскрипт:
        #!/bin/sh
        export WINEARCH=win32
        export WINEPREFIX=$HOME/.wine_ss13
        wine $WINEPREFIX/'drive_c/Program Files/BYOND/bin/byond.exe'
Некоторая информация по изменению "имени компьютера".
Для обычного запуска видимо НЕ нужна, но может помочь обойти бан?
    HKEY_CURRENT_USER --> Software --> Wine --> Network --> UseDnsComputerName
    Set 'UseDnsComputerName' key to 'N'
    HKLM\System\CurrentControlSet\Control\ComputerName\ComputerName = desired name

[lmms] [vst]
В LMMS нет плагина Vestige (необходимого для запуска VSTi-инструментов)
Удалить пакет LMMS, и скачать оффициальный Appimage.

[-useful-packages] [video] [youtube-dl] [yt-dlp]
Как скачивать видео с youtube с помощью youtube-dl или yt-dlp
Они также поддерживает много разных сайтов, например твитер.
    sudo apt install yt-dlp ffmpeg
Кажется, что yt-dlp лучше, это форк.
Если хочешь скачать видео, то просто делай:
    yt-dlp ССЫЛКА
        Ограничить разрешение:
            -S res:720
            -S res:1080
        Другой вариант ограничения разрешения (плюс-минус то же самое, но больше писанины?)
            -f 'bv*[height=720]+ba/bv[height=720]'
            -f 'bv*[height=1080]+ba/bv[height=1080]'
        Задать выходное имя: (расширение можно не писать)
            -o файл
        Без видео:
            -x
        Выбрать формат аудио: (если качаешь только аудио) (но лучше не стоит, лучше оставить родной)
            --audio-format=mp3
Если хочешь скачать кастомный формат видео:
    Получить список форматов:
        yt-dlp -F ССЫЛКА
    Скачать в формате:
        yt-dlp -f ФОРМАТ ССЫЛКА
    Можно выбрать выходной формат так: --merge-output-format=mp4

[web] [artstation]
Как скачивать изображения в полном разрешении с ArtStation
В URL заменить `large` на `4k`.

[mime] [fonts]
Регистрация нового расширения файла, MIME-типа
Это в том числе помогает привязать разные приложения к .fon и .exe, которые иначе считаются одинаковым типом файлов.
Ниже пример для `.fon`:
    sudo nano /usr/share/mime/packages/ms-fon.xml
    Имя файла произвольное. Туда вставить следующее:
        <?xml version="1.0" encoding="UTF-8"?>
        <mime-info xmlns="http://www.freedesktop.org/standards/shared-mime-info">
          <mime-type type="application/x-ms-fon">
            <comment>FON font</comment>
            <generic-icon name="font-x-generic"/>
            <glob pattern="*.fon"/>
          </mime-type>
        </mime-info>
    Где:
        `application/x-ms-fon` - ID типа файла.
            Префикс `x-` значит "экспериментальный"/"неофициальный", лучше использовать его для всех кастомных типов.
            `application/` означает "специфичный для приложения".
        `FON font` - читаемое название. Не делай слишком длинным, его будет видно в файловом менеджере.
        `*.fon` - расширение. Тут все понятно.
        `font-x-generic` - иконка. Этот тег необязательный.
            Список иконок смотри в `/usr/share/icons/*/mimes/*/`, а конкретно в `/usr/share/icons/elementary-xfce/mimes/32/`.
    Дальше не забыть сделать:
        sudo update-mime-database /usr/share/mime

[audio] [cue] [flac]
Дробим длинный .flac-файл по данным из .cue
.cue описывает, как длинный .flac разделяется на отдельные треки.
Дробить так:
    sudo apt-get install cuetools shntool
    shnsplit -f MY_FILE.cue -t %n-%t -o flac MY_FILE.flac
Еще советуют добавить
    cuetag file.cue [0-9]*.flac
Но похоже это не работает нормально, если в названиях песен есть спецсимволы.

[-initial-setup] [firefox] [userchrome] [css]
Ставим кастомный userChrome на Firefox
Открой `about:support`, нажми каталог профиля -> открыть каталог. В этой папке создай папку `chrome`, в ней файл `userChrome.css`
Открой `about:config`, там поставь `toolkit.legacyUserProfileCustomizations.stylesheets` в `true`.
.
Пример нормального `userChrome.css`. Разжимать `base64 -d 1.txt | gzip -d >userChrome.css`, был сжат `gzip -c9 userChrome.css | base64`
    H4sICB6M/WYCA3VzZXJDaHJvbWUuY3NzANVWzW7bRhA+R08xjQ+WVK1EyT9IGCRAETRpD0aCRj0Z
    PizJkbQ1tUvsLiW5gYGkL9AX6EMYQXMpmjwD9UadXZKyRP80QNtDAcOmd3b+vm92ZgZdYIzBeCYM
    GIytUBLoc6LVHHKDOp7RF/aVnvp73UGrNeh2uzAW05lFCXkGiVYZS9RSDmIlLa7sIFMZnc9R5mAy
    Hgs5hfYjeIMZjILRsANkgOw4ub8ZSmXbfSGZO0mFsR145rWFxXnvC+7B2xZAxpOEPLEoVfF5CAfZ
    Cr4S80xpy6V9AoMuaEzyGMEqJ+zByP0a0jWlIaA/3IBETDBxWQLMydEMXZoh5NKgbZpbPB71A2Aw
    If3KOUSYqiUckjWycdkKtVLWR8cY11otMy4xZXVurFILvcaj3YhJvYT6tVaWWBnzyMB4ifzcVABS
    DN8kP+XGguURxEpL1GBmPMMeqMxRydP0gtKeqwV6JrAK0DpbzsQefUUUFzHN/KGL1UWbVydMq1yW
    MRJGPqi+O454fD71skolUjohFc0TkZsQFly3b7HSuVvgKAhukvZcSUl1WbNCvHA9JWoqmh1/wb06
    l609E2uVplFuCUeWZz3YPXG1C2+d4vFgGAxcjdbOqqwsVfhSJHZWOtxmaetWpMjcvL4Y3CQThoPh
    sbM/grGSCN6xnSG8WD0+9iSWlmAp7AyoNpjy8jkaEBJiJGP0d0K0OvzBCJtzx7Mns8FLKEz71GDq
    gTjrwek8T63YHHRCNlc/s3Tp7W94p/99IbAqp1ilSoegpxFvBz2ofvpHnb8BodKzmksqPI3SNuA4
    jbR7W65fPH1odY4Pz+A/z2B0dETvfvPr38ijVdabI4aI89ch4hoWwohIpMJe1NxsvbNT31rLbimS
    M2pjPnVjHavPmjjUJ5UCS8lVlW75GPzbpO9VO+Zp3L7ziTHX+Do9d7tzSxrfS04DgFqFgy90/Zpr
    bikf79DYixR902gk49vyhqenjkvixh/uELYjiZDaJtYi5tFKsa6EDtzfZMqu7J6iUalIqqbimL9W
    8bmbOoeSyF6jkPujoNNEgoB4QTknXJ/DtTX/wu6q2f8rGNc3N753Pe2g1ng8HrsmeP8MDfii0RLc
    JOyHcsRdT2G7RFpO6jHXiKoyWy8MKU5s0+q2vAL4tn7uxzG8ysoeTAuEmrgeP/I9/gm8ROoJ3M2h
    N9zCCb+A4SH49j88CEdHYXAIL0/GXwcHQQDt4rfi8/p98Ufxobjqwfr9+pfiqvhU/F5crd/R96fi
    c/ERig/rd8XH4s/1rx3/FF0Qt+1vMW0FtMFdr2zwnUgQfpRiIiicb1e0uxkfdDkD3a29vJQy3EhZ
    KaWBeafMNyelaCDpapwK6lME8YN6DjYG5oPN0hPctvCUgb5aoJ64TeXErXeVJ0YDE43ct5Qpzt0e
    F2G9spXYS7XswTli5qrAOkxmqBH8juQGKDe+g5GXvdcprUPm+QwX2oULiTBZyi9CskHNbnuhuNyB
    0I3rfRrAvrj2t+Gjw3LulEf3mmz9BSOOggx4CwAA
Он был сгенерирован 14 мая 2022 тут:
    1. https://www.userchrome.org/firefox-89-styling-proton-ui.html#tabstyler
        Tab corner rounding -> None
        Show inactive tab boundaries -> Using a vertical bar
    2. https://www.userchrome.org/firefox-89-styling-proton-ui.html#menuspacing
        Уменьшил паддинг с 4 до 3, в строчке где комментарий предлагает это сделать.
    3. Руками добавлена часть, убирающая кнопку управления расширениями, отсюда: https://github.com/black7375/Firefox-UI-Fix/issues/702

[-initial-setup] [firefox] [ublock-origin]
Правила для Ublock origin
    ! Баним вопрос про куки на реддите
    old.reddit.com###eu-cookie-policy
Вот это уже устарело?
    ! Баним яндекс-дзен
    yandex.ru##.media-grid__media-content

[-initial-setup] [firefox]
Навсегда отключаем Firefox View
Если его просто скрыть из гуя, то FF время от времени будет про него напоминать.
Вместо этого, иди в `about:config` и там выключи `browser.tabs.firefox-view`.

[-initial-setup] [-useful-packages] [lock-screen] [manjaro
Менее лагучая блокировка экрана на Manjaro
На manjaro по дефолту экран медленно анлочится - нужно сначала потыкать мышкой, чтобы он проснулся, и только потом вводить пароль.
Возможно есть простой фикс - в настройках электропитания поставить, чтобы лочилось при начале скринсейвере, а не при конце - проверь.
А вот этот фикс точно рабочий:
    pamac install xfce4-screensaver
Потом в редакторе настроек включаем его:
    xfce4-session -> General -> LockCommand = пустая строка
Потом в настройках питания -> безопасность ставим "блокировать экран" = "никогда", и снимаем галочку "блокировать при переходе в ждущий режим".
Просто удалять пакет `light-locker` похоже вредно, потому что эти настройки скрываются, но их эффект не пропадает до конца. Возможно можно удалить после
    изменения настроек.

[-initial-setup] [mount] [root] [arch] [manjaro]
Mount разделов в xfce без рутовых прав
Раньше работало из коробки, но в arch и manjaro теперь не работает. Хмм.
Чинится так:
    sudo nano /etc/polkit-1/rules.d/10-nopwd-mount.rules
Туда пишем это: (из https://superuser.com/q/1192269)
    // Allow udisks2 to mount devices without authentication for users in the "wheel" group.
    polkit.addRule(function(action, subject) {
        if ((action.id == "org.freedesktop.udisks2.filesystem-mount-system" ||
             action.id == "org.freedesktop.udisks2.filesystem-mount") &&
            subject.isInGroup("wheel")) {
            return polkit.Result.YES;
        }
    });
Потом ребут.


[bug-workaround] [crash]
Возможные причины крашей и зависаний
* NO_HZ - Если в логах вылезает NOHZ, можно попробовать его отключить, добавив `nohz=off` во флаги ядра (тут где-то инструкция)

[rsync]
Переносим файлы через rsync
Локально:
    rsync -rtv -n dir1/ dir2/
Это тестовый прогон. Чтобы на самом деле применить изменения, убери `-n`.
Заметь слеши в конце путей. Они влияют на поведение.
Чтобы обратиться к другому компьютеру, используй `username@address:/path/to/dir/`.
Заметь `-t`. Без него не синхронизируется время изменения файла, и следующий прогон будет вхолостую ковырять свежеотправленные файлы.
Есть еще `--delete`, чтобы убирать файлы в целевой папке, которые пропали в исходной.

[time] [date] [timezone]
Меняем временную зону (timezone)
Федора: (возможно на убунте тоже работает, не проверял)
    Делай так:
        sudo timedatectl set-timezone Europe/Moscow
    Посмотреть статус можно так:
        timedatectl
    Искать имя таймзоны интерактивно можно в `tzselect`, чтобы потом вставить в команду выше.
Убунту: (открывает интерактивное меню в терминале)
    sudo dpkg-reconfigure tzdata

[-initial-setup] [-useful-packages]
Как поставить докер
Пакет:
    arch,manjaro: pacman -S docker
Общая настройка:
    systemctl enable docker
    systemctl start docker
    sudo usermod -aG docker $USER
    Перезайти в систему.

[-initial-setup] [-useful-packages]
Ставим Mathics3, опенсурсную систему компьютерной алгебры
    Есть еще SageMath - он постарее, но уж очень корявый.
Это имитация Wolfram Mathematica. Неполная, но какие-то простые функции одинаковые и там и там. Можно пробовать гуглить как будто используешь Mathematica.
Ставим (или обновляем) так:
    docker pull mathicsorg/mathics
Запускаем так: (это из мануала)
    docker run --rm -it --name mathics-web -p 8000:8000 -v /tmp:/usr/src/app/data mathicsorg/mathics --mode ui
Если вычисление зависло, Ctrl+C в терминале его останавливает. Если второй раз тыкнуть, сервер закроется.
Синтаксис для чайников: (справа-сверху вопросик со справкой)
    (* комментарий *)
    Quit[] - сбросить состояние
    Clear[var] - сбросить одну переменную
    `==` - сравнение, `=` - немедленное присваивание (как `:=` в мейке), `:=` - ленивое присваивание (как `=` в мейке)
    В именах переменных запрещена `_`.
    Вызвать функцию: `func[a, b]`.
    Создать функцию: `func[a_, b_] := a + b` (лямбды и другие формы записи смотри в мануале)
    Список/тупла/вектор - `{a, b, c}`, индексировать - `a[[b]]` (индексы с единицы)
    Матричное умножение, оно же скалярное для векторов: `.`, поэлементное - `*`, векторное - `Cross[a, b]`.
    Решить и выразить переменную: `Solve[x*2 == 42, x]`.
        В обоих аргументах могут быть списки в фигурных скобках.
        Нужен напильник, чтобы он решал уравнения на векторах.
            Помогает завернуть сравнение в `Thread[...]`, чтобы разложить на скалярные уравнения.
                Сравни `Solve[{x,y}=={y,42},x]` (не работает) и `Solve[Thread[{x,y}=={y,42}],x]` (работает).
            Помогает заранее объявить вектора как `a = {ax,ay}` (или с `:=`).
    Simplify[x] - ужать выражение
    Expand[x] - разжать выражение
    `/.` - выполнить замену, или `//.` - замена до упора, например `Simplify[sol] //. x_*y_+x_*z_->x*(y+z)` выносит общие множители (интересно почему сам не делает).
    `===` - сравнить две записи на одинаковость (сравнивает в лоб, попробуй сначала Simplify).
    Еще операции с векторами:
        Norm[x] - длина
        Normalize[x] - сделать длиной 1
        Cross[x] - повернуть 2D-вектор на 90 градусов (X в Y, как наш `.rot90()`).
        Total[x] - суммировать элементы
    Против странных крашей в Simplify иногда помогает не использовать цифры в именах переменных, но не всегда, см. https://github.com/Mathics3/mathics-core/issues/920

[-useful-packages]
Ставим Minecraft
Arch:    yay -S minecraft-launcher
Manjaro: pamac install minecraft-launcher
    Это AUR, но оффициальный, сюда ведет ссылка с офсайта.
    Он ставит все в `~/.minecraft`, как и другие официальные способы.
    Когда попросит выбрать java runtime, `jre-openjdk` выглядит правильно.

[-initial-setup] [manjaro] [root] [password]
Убираем root password, проверяем его наличие
Manjaro, похоже, требует задать этот пароль при установке. Другие дистрибутивы, например убунта, наоборот делают рутовый аккаунт без пароля.
Проверить состояние:
    sudo passwd -S root
    Смотри на букву капсом: L(ocked) - заблокирован и нет пароля, P - есть пароль, NP - свободный вход без пароля.
Установить пароль:
    sudo passwd root
Заблокировать/отключить пароль:
    sudo passwd -l root

[-initial-setup] [grub] [splash]
Начальная декоративная настройка grub
Редактируй тут:
    sudo nano /etc/default/grub
Как применить:
    Проверь, по какому пути у тебя лежит конфиг, и выбери команду из двух.
    Арч (/efi):   LANG= sudo grub-mkconfig -o /efi/grub/grub.cfg
    Арч (/boot):  LANG= sudo grub-mkconfig -o /boot/grub/grub.cfg
    Другие:       LANG= sudo grub2-mkconfig -o /boot/grub2/grub.cfg
        Проставляем LANG, чтобы не было сообщений на русском при загрузке.
Что можно поменять:
Убрать `quiet splash`, чтобы было видно логи загрузки. (В арче splash и так не стоит.)
Меньше задержка:
    GRUB_TIMEOUT=2
Не рисовать меню если ничего не кликнуто:
    GRUB_TIMEOUT_STYLE=hidden


[manjaro] [boot] [bug-workaround]
Manjaro зависает при загрузке через раз
Непонятно. Возможно кривая поддержка btrfs? Возможно помогает отдельный раздел boot с ext4?
Вроде помогло убрать quiet splash (тут есть инструкция)

[manjaro] [-initial-setup]
Убираем брендинг manjaro
1. Из кнопки whisker menu. Там ищем иконку xfce4-menu, или если такой нет, ищи по слову whisker.
2. Из аватарки пользователя при логине - в lightdm gtk greeter settings выбираем "иконка" -> "avatar-default".



[fedora]
Человеческое авто-обновление
Всякий dnf-automatic - это фигня, потому что если выключишь ПК при нем работающем, все сломается (вроде?).
Лучше раз в N дней запускать:
    pkcon update --only-download
    pkcon offline-trigger

[fedora]
Настройка языка системы
В меню настроек этого нет, ищи Language в приложениях.
Если там кнопка OK не нажимается, возможно ты забыл включить интернет.
Потом полный ребут.
Еще может понадобиться на экране логина справа-сверху один раз выбрать русский язык, не уверен.

[fedora]
Настраиваем пакетный менеджер dnf
sudo nano /etc/dnf/dnf.conf
	Увеличиваем число параллельных загрузок (число скопировано из nobara linux)
		max_parallel_downloads=6
	Меняем дефолтное действие с no на yes:
		defaultyes=True

[fedora]
Разрешаем монтировать диски без админских прав.
	sudo nano /etc/polkit-1/localauthority/50-local.d/10-disk-mounting.pkla
Туда пишем:
    [udisks]
    Identity=unix-group:wheel
    Action=org.freedesktop.udisks2.*
    ResultAny=yes
    ResultInactive=no
    ResultActive=yes

[fedora] [-initial-setup]
Лечим двойной логин при запуске (настраиваем имя ПК)
    sudo hostnamectl set-hostname hbc-laptop

[fedora]
Лечим кривые ассоциации открытия папок с Catfish
Все просто - настройки->приложения по умолчанию->утилиты->проводник.
Даже если там уже стоит thunar, его надо повторно выбрать.

[fedora] [icons]
Привычные иконочки почти как на Xubuntu
	sudo dnf install elementary-xfce-icon-theme

[fedora]
Добавляем RPMFusion - репозиторий с дополнительными пакетами
	sudo dnf install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
Ставим всякие кодеки:
	sudo dnf groupinstall multimedia --allowerasing
	sudo dnf groupupdate multimedia

[fedora]
Устанавливаем кодеки, чтобы плееры нормально работали
Сначала подключи RPMFusion, как написано выше.
    sudo dnf install audacious-plugins\*
    sudo dnf install libavcodec-freeworld xmms2-freeworld # Не уверен, нужно ли. Лишним не будет?
Также, взято отсюда: https://docs.fedoraproject.org/en-US/quick-docs/assembly_installing-plugins-for-playing-movies-and-music/
    sudo dnf install gstreamer1-plugins-{bad-\*,good-\*,base} gstreamer1-plugin-openh264 gstreamer1-libav --exclude=gstreamer1-plugins-bad-free-devel
    sudo dnf install lame\* --exclude=lame-devel
    sudo dnf group upgrade --with-optional Multimedia

[fedora] [firewall]
Файервол
По умолчанию стоит файрвол, который видимо не пропускает в сеть неизвестные приложения?
Известные пропускает автоматически (sshd, например).
В гуе можно временно открыть определенный порт, но по умолчанию это происходит до перезагрузки?

[fedora] [chrome]
Ставим Chrome
Он лучше, чем Chromium (поддержка всяких кодеков и т.п.).
    sudo dnf install fedora-workstation-repositories
    sudo dnf config-manager --set-enabled google-chrome
    sudo dnf install google-chrome-stable

[fedora] [discord]
Ставим Discord, если нет пакета
Создай такой скрипт и запусти. Им же потом можно обновлять, даже не закрывая дискорд:
    cd ~/.downloads
    rm -f discord.tar.gz
    wget 'https://discordapp.com/api/download/stable?platform=linux&format=tar.gz' -O discord.tar.gz
    pkill -e -INT Discord
    sudo rm -rf /usr/local/share/Discord
    sudo tar -xf discord.tar.gz -C /usr/local/share
    sudo cp /usr/local/share/Discord/discord.desktop /usr/local/share/applications/discord.desktop
    sudo sed 's|/usr/share/discord/Discord|/usr/local/share/Discord/Discord|' -i /usr/local/share/applications/discord.desktop
    sudo cp /usr/local/share/Discord/discord.png /usr/local/share/icons/
    rm discord.tar.gz

[-initial-setup] [discord]
Делаем так, чтобы Discord не настаивал на обновлении
Открываем:
    nano ~/.config/discord/settings.json
Должен открыться json. Туда дописываем:
    "SKIP_HOST_UPDATE": true

[manjaro] [aur]
Чиним отлетевшее обновление пакетов из AUR.
Это исправляет ошибки вида: "Не удалось сгенерировать информацию по ??" (в гуи pamac),
    или "ОШИБКА: install-файл (??.install) не существует или не является обычным файлом." (в консоли pamac).
Через гуи чинится так:
    Настройки -> Сторонние -> AUR -> Каталог сборки -> Очистить
Или возможно через консоли так:
    pamac clean -bu

[-initial-setup] [wacom] [tablet]
Настраиваем планшет Wacom
Мануалы, на всякий:
    https://wiki.archlinux.org/title/Graphics_tablet
    https://man.archlinux.org/man/wacom.4
1. Обычные настройки
    Ставим программу xsetwacom (и правильный драйвер) - это для xorg, вероятно на wayland будет другой пакет?
        pacman -S xf86-input-wacom
    Ребут, чтобы драйвер врубился.
    - Экспериментируем с настройками:
        Ищем номер (id) девайса, и запоминаем его (их может быть несколько, я выбрал stylus вместо eraser)
            xsetwacom --list devices
        ID иногда меняется на перевтыке, но пофиг, потому что он нужен только временно, чтобы играть с настройками.
        Маппим на правильный монитор: (чтобы координаты мышки были нормальные)
            В xrandr находим имя монитора планшета (мой - `HDMI-A-0`)
            Делаем так: (9 = id)
                xsetwacom --set 9 MapToOutput HDMI-A-0
        Кнопка на стилусе:
            По дефолту это средняя кнопка, так менять на правую:
                xsetwacom --set 9 button 2 3
                    Первое число - id кнопки (1 = тычка в экран, 2+ - кнопки на стилусе)
                    Второе число - эффект (1 = левая, 2 = средняя, 3 = правая)
            По дефолту она срабатывает сразу когда нажата. Можно отложить срабатывание до тычки в экран:
                xsetwacom --set 9 TabletPCButton on
    - Делаем настройки перманентными:
        Есть вариант через конфиги xorg, но там нельзя делать MapToOutput, поэтому даже не пробуем.
        Делаем скрипт для применения настроек:
            sudo mkdir -p /usr/local/share/scripts
            sudo nano /usr/local/share/scripts/setup_wacom_tablet.sh
        Туда пишем:
            #!/bin/bash
            for i in $(seq 8); do
                TABLET_ID=$(xsetwacom --list devices | grep -Po -m1 '(?<=id: )\d+(?=\s+type: STYLUS)')
                [[ $TABLET_ID ]] && break
                sleep 1
            done
            [[ $TABLET_ID ]] || echo "Timed out while waiting for the tablet!"
            [[ $TABLET_ID ]] || exit
            xsetwacom --set $TABLET_ID MapToOutput HDMI-A-0
            xsetwacom --set $TABLET_ID button 2 3
        Проверь, что первая команда у тебя находит id-шник.
        Тут `seq 8` - это сколько секунд ждать планшет.
        Сделай исполняемым:
            sudo chmod +x /usr/local/share/scripts/setup_wacom_tablet.sh
        Теперь сделай systemd unit для него:
                (возможно необязательно, но так как-то получше, см. ниже)
                (заметь, это user а не system - потому что `xsetwacom` нужны работающие иксы)
            sudo mkdir -p /usr/local/lib/systemd/user/
            sudo nano /usr/local/lib/systemd/user/wacom-custom-settings.service
        Туда пиши:
            [Unit]
            Description=Wacom custom configuration
            [Service]
            Type=oneshot
            ExecStart=/usr/local/share/scripts/setup_wacom_tablet.sh
        Теперь автозапуск при подключении планшета (но это не срабатывает если он уже был воткнут при включении, ниже отдельно настраиваем)
        Узнай usb vendor id планшета. В выводе `lsusb`, будет `ABCD:EFGH`, первые 4 цифры - этот самый vendor id. У меня - 056a
        Cоздай правило:
            sudo nano /etc/udev/rules.d/99-wacom.rules
        Туда пиши: (idVendor вставь свой) (вообще, он умеет и скрипты напрямую запускать, но, говорят, долгие команды нехорошо сюда писать? поэтому systemd)
            ACTION=="add", SUBSYSTEM=="usb", ATTRS{idVendor}=="056a", TAG+="systemd", ENV{SYSTEMD_USER_WANTS}+="wacom-custom-settings.service"
        И дополнительно автозапуск при логине
            Прогуляйся в меню автозапуска, и туда добавь команду: systemctl --user start wacom-custom-settings
            Наверное можно сделать автозапуск через systemd, но у меня быстро не взлетело, поэтому пофиг
        Ребут и проверяй. Потом кнопкой выключи и включи планшет, проверь что не слетело.
2. Настройки экрана (например яркость)
    Эти настройки все перманентные, записываются на планшет.
    Источник: https://www.davidrevoy.com/article710/cintiqs-on-gnu-linux-how-to-setup-brightness-contrast-and-more
    Поставь утилиту: (она в целом для настройки любых экранов)
        sudo pacman -S ddcutil
    Для работы нужно включить модуль (после ребута пакет вроде сам его включает)
        sudo modprobe i2c-dev
    Узнай ID (у автора эта команда плюсом выключала дисплей, поэтому редирект в файл на всякий)
        sudo modprobe detect >1.txt
    У меня ID = WAC
    Посмотри список фичей:
        ddcutil --mfg=WAC capabilities
    У меня яркость (ака backlight) имеет id 6b, и дефолтное значение 75
    Читать яркость:
        ddcutil --mfg=WAC getvcp 6b
    Менять яркость: (запоминается планшетом) (50 - норм значение)
        ddcutil --mfg=WAC setvcp 6b 50
    Еще там можно язык гуя поменять, у меня на русский так: (обрати внимание, правое число всегда десятичное! даже если в выводе предлагают hex)
        ddcutil --mfg=WAC setvcp cc 9
    Скрипт изменения яркости: (поставь yad для гуи)
        #!/bin/bash
        VAL="$(ddcutil --mfg=WAC getvcp 6b | grep -oP '(?<=current value = \s{0,5})\d+')"
        while VAL="$(yad --scale --width=300 --height=120 --fixed --title='Яркость планшета' --button='Применить' --button='Выйти' --value="$VAL")"
        do
            ddcutil --mfg=WAC setvcp 6b "$VAL" --noverify
        done


[docker]
Докер для чайников
Скачать образ
    docker image pull IMAGE
Создать интерактивный контейнер
    docker container create -it --name <NEW_CONTAINER> <IMAGE> /usr/bin/bash
  Дополнительные опции: (перед именем контейнера)
    Проброс видюшки
        Общая часть
            -env=DISPLAY --volume=/tmp/.X11-unix:/tmp/.X11-unix:ro
        Добавить для AMD (для NVidia надо исследовать)
            --device /dev/dri
        На хосте запустить:
            xhost +local:docker
    Дефолтный юзер (можно потом поменять - сначала лучше не указывать, потому что в image нет твоего юзернейма)
        -u <USERNAME>
Запустить контейнер:
    docker container start <CONTAINER>
Остановить контейнер:
    docker container stop <CONTAINER>
Подключиться к работающему контейнеру:
    docker attach <CONTAINER>
Запустить разовую команду (неважно, в работающем контейнере или нет?)
    docker container exec -it <CONTAINER> /usr/bin/bash
  Из под рута:
    docker container exec -it -u root <CONTAINER> /usr/bin/bash
  Здесь `-it` значит "интерактивно". Если не нужно, можно не писать.
Полезная команда для убунты в докере - подготовить ее к интерактивной работе и доставить всякие полезные пакеты.
    unminimize
Убираем варнинг убунты про локали (ругается например perl):
    sudo apt install locales
    sudo locale-gen en_US.UTF-8
    sudo update-locale LANG=en_US.UTF-8
Меняем дефолтного юзера (какой-то тупой способ, но работает)
    * docker container stop CONTAINER
    * sudo nano $(docker inspect --format='/var/lib/docker/containers/{{.Id}}/config.v2.json' CONTAINER)
        * Там ищем `"User": ""`, и вместо пустой строки пишем юзернейм.
    * sudo systemctl restart docker
Создаем image из контейнера:
    docker commit <CONTAINER> <NEW_IMAGE>
Подключаем GPU к уже существующему контейнеру
    Надо было при создании указывать! Теперь делай `docker commit`, и пересоздавай контейнер из image.


[user]
Создаем пользователя
Создаем:
    sudo useradd -m -g sudo USERNAME
    # -m - создать домашнюю директорию
    # -g sudo - добавить в группу, которая умеет делать sudo - опционально, конечно
Задаем пароль:
    sudo passwd USERNAME
Задаем нормальный шелл:
    sudo chsh USERNAME -s /bin/bash
Добавляем в группы:
    sudo usermod -a -G MyGroup $USER
Включаем цветной промпт в терминале:
    nano ~/.bashrc
    # Раскомментируем там `force_color_prompt=yes`.

[ssh] [ssh-agent] [arch] [manjaro]
Настраиваем автоматическое подключение ssh-ключей по необходимости, с запросом пароля через GUI
Сначала убедись, что оно само не включилось.
Попробуй так: (тут все кроме первого шага в какой-то момент должно само настраиваться? когда арч починит свою фигню)
    sudo pacman -S gnome-keyring
    systemctl enable --user gcr-ssh-agent.socket
    systemctl start --user gcr-ssh-agent.socket
    export SSH_AUTH_SOCK=$XDG_RUNTIME_DIR/gcr/ssh
Если тебе это помогло, добавь `export ...` в автозапуск:
    sudo nano /etc/profile.d/gcr-ssh-agent.sh
        И туда вписываешь эту команду.
Еще нужно отключить дефолтный агент так: (а то он затирает нашу переменную)
    xfconf-query -c xfce4-session -p /startup/ssh-agent/enabled -n -t bool -s false


[ssh] [ssh-agent]
Настраиваем ssh-agent из консоли
Это программа, которая запоминает ssh-ключи и пароли от них
Проверить известные ключи:
    ssh-add -l
Запустить агент, если не запущен:
    eval `ssh-agent -s`
Добавить ключ:
    ssh-add <FILE>
Убрать ключ:
    ssh-add -d <FILE>
Убрать все добавленные вручную ключи:
    ssh-add -D

[git] [ssh]
Используем конкретный ssh-ключ для конкретного репозитория
Редактируем конфиг:
    nano ~/.ssh/config
Туда пишем: (`work_github` - произвольное имя)
    Host work_github
        HostName github.com
        User git
        AddKeysToAgent yes
        IdentitiesOnly yes
        IdentityFile ~/.ssh/work_git
Теперь клонируем так:
    git clone work_github:RepoUser/RepoName
Если есть сабмодули, то в папке с репозиторием делаем так:
    git config url.work_github:.insteadOf https://github.com/
    А потом обновляем сабмодули

[-initial-setup] [debian] [mirror]
Выбираем быстрое зеркало
    sudo apt install netselect-apt
    sudo netselect-apt

[-initial-setup] [mint]
Выключаем звездочки при вводе пароля в sudo
Это называется "password feedback".
В mint делаем так:
    sudo nano /etc/sudoers.d/0pwfeedback
    Там закомментируем единственную строчку

[path] [env] [env-variables]
Где менять переменные окружения
    sudo nano ~/.xprofile
        export FOO=BAR
Есть еще ~/.bashrc - только для баша, и только для одного пользователя. (туда хорошо писать кастомный prompt)
    Есть еще ~/.bash_profile - он для login shells, а .bashrc - теоретически только для non-login shells,
    но на практике .bash_profile инклудит .bashrc (проверял в manjaro)

[msvc] [msvc-wine]
Ставим MSVC в Wine
sudo pacman -S --needed msitools ca-certificates samba # Для других дистрибутивов смотри их ридми
https://github.com/mstorsjo/msvc-wine
cd msvc-wine
DIR=$(pwd)/_install
mkdir -p $DIR
./vsdownload.py --dest $DIR
./install.sh $DIR

[summary] [hostname]
Печатаем сводку информации о системе
    hostnamectl
